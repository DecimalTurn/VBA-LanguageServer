>VERSION 1.0 CLASS
#^^^^^^^^ source.vba entity.other.attribute-name.block.vba
#        ^^^ source.vba entity.other.attribute-name.block.vba constant.numeric.vba
#           ^^^^^^ source.vba entity.other.attribute-name.block.vba
>BEGIN
#^^^^^ source.vba entity.other.attribute-name.block.vba
>  MultiUse = -1  'True
#^^ source.vba entity.other.attribute-name.block.vba
#  ^^^^^^^^ source.vba entity.other.attribute-name.block.vba meta.attribute-assignment.vba support.variable.property.vba
#          ^^^ source.vba entity.other.attribute-name.block.vba meta.attribute-assignment.vba keyword.operator.assignment.vba
#             ^^ source.vba entity.other.attribute-name.block.vba meta.attribute-assignment.vba constant.numeric.vba
#               ^^^^^^^ source.vba entity.other.attribute-name.block.vba meta.attribute-assignment.vba comment.line.apostrophe.vba
>END
#^^^ source.vba entity.other.attribute-name.block.vba
>Attribute VB_Name = "Dictionary"
#^^^^^^^^^ source.vba meta.attribute.vba keyword.attribute.vba
#         ^ source.vba meta.attribute.vba
#          ^^^^^^^ source.vba meta.attribute.vba support.variable.property.vba
#                 ^ source.vba meta.attribute.vba
#                  ^ source.vba meta.attribute.vba keyword.operator.assignment.vba
#                   ^ source.vba meta.attribute.vba
#                    ^^^^^^^^^^^^ source.vba meta.attribute.vba string.quoted.double.vba
>Attribute VB_Description = "A wrapper that extends Scripting.Dictionary functionality."
#^^^^^^^^^ source.vba meta.attribute.vba keyword.attribute.vba
#         ^ source.vba meta.attribute.vba
#          ^^^^^^^^^^^^^^ source.vba meta.attribute.vba support.variable.property.vba
#                        ^ source.vba meta.attribute.vba
#                         ^ source.vba meta.attribute.vba keyword.operator.assignment.vba
#                          ^ source.vba meta.attribute.vba
#                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.attribute.vba string.quoted.double.vba
>Attribute VB_GlobalNameSpace = False
#^^^^^^^^^ source.vba meta.attribute.vba keyword.attribute.vba
#         ^ source.vba meta.attribute.vba
#          ^^^^^^^^^^^^^^^^^^ source.vba meta.attribute.vba support.variable.property.vba
#                            ^ source.vba meta.attribute.vba
#                             ^ source.vba meta.attribute.vba keyword.operator.assignment.vba
#                              ^ source.vba meta.attribute.vba
#                               ^^^^^ source.vba meta.attribute.vba constant.language.boolean.vba
>Attribute VB_Creatable = False
#^^^^^^^^^ source.vba meta.attribute.vba keyword.attribute.vba
#         ^ source.vba meta.attribute.vba
#          ^^^^^^^^^^^^ source.vba meta.attribute.vba support.variable.property.vba
#                      ^ source.vba meta.attribute.vba
#                       ^ source.vba meta.attribute.vba keyword.operator.assignment.vba
#                        ^ source.vba meta.attribute.vba
#                         ^^^^^ source.vba meta.attribute.vba constant.language.boolean.vba
>Attribute VB_PredeclaredId = False
#^^^^^^^^^ source.vba meta.attribute.vba keyword.attribute.vba
#         ^ source.vba meta.attribute.vba
#          ^^^^^^^^^^^^^^^^ source.vba meta.attribute.vba support.variable.property.vba
#                          ^ source.vba meta.attribute.vba
#                           ^ source.vba meta.attribute.vba keyword.operator.assignment.vba
#                            ^ source.vba meta.attribute.vba
#                             ^^^^^ source.vba meta.attribute.vba constant.language.boolean.vba
>Attribute VB_Exposed = False
#^^^^^^^^^ source.vba meta.attribute.vba keyword.attribute.vba
#         ^ source.vba meta.attribute.vba
#          ^^^^^^^^^^ source.vba meta.attribute.vba support.variable.property.vba
#                    ^ source.vba meta.attribute.vba
#                     ^ source.vba meta.attribute.vba keyword.operator.assignment.vba
#                      ^ source.vba meta.attribute.vba
#                       ^^^^^ source.vba meta.attribute.vba constant.language.boolean.vba
>' Copyright 2023 Sam Vanderslink
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' sam.vanderslink@notis.net.au
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' 
#^^ source.vba comment.line.apostrophe.vba
>' Permission is hereby granted, free of charge, to any person obtaining a copy 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' of this software and associated documentation files (the "Software"), to deal 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' in the Software without restriction, including without limitation the rights 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' copies of the Software, and to permit persons to whom the Software is 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' furnished to do so, subject to the following conditions:
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' 
#^^ source.vba comment.line.apostrophe.vba
>' The above copyright notice and this permission notice shall be included in 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' all copies or substantial portions of the Software.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' 
#^^ source.vba comment.line.apostrophe.vba
>' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' IN THE SOFTWARE.
#^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>
>Option Explicit
#^^^^^^^^^^^^^^^ source.vba keyword.control.vba
>
>'-------------------------------------------------------------------------------
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'   Class: Dictionary
#^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'   A wrapper that extends Scripting.Dictionary functionality.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'-------------------------------------------------------------------------------
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'   Exceptions thrown by the Scripting.Dictionary bubble up to the Dictionary
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'   but do not seem to go further than that, even if you have your own error
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'   handling. That's why you'll see exception handling in here that rethrows the
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'   exception. This is so that it can be caught by the calling method.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'       #JustVbaThings
#^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>
>' Enums
#^^^^^^^ source.vba comment.line.apostrophe.vba
>'-------------------------------------------------------------------------------
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>Enum CompareModeType
#^^^^ source.vba meta.enum.declaration.vba storage.type.enum.vba
#    ^ source.vba meta.enum.declaration.vba
#     ^^^^^^^^^^^^^^^ source.vba meta.enum.declaration.vba entity.name.type.enum.vba
>'   Performs a comparison by using the setting of the Option Compare statement.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.enum.declaration.vba comment.line.apostrophe.vba
>    vbUseCompareOption = -1
#^^^^ source.vba meta.enum.declaration.vba
#    ^^^^^^^^^^^^^^^^^^ source.vba meta.enum.declaration.vba variable.other.enummember.vba
#                      ^ source.vba meta.enum.declaration.vba
#                       ^ source.vba meta.enum.declaration.vba keyword.operator.assignment.vba
#                        ^ source.vba meta.enum.declaration.vba
#                         ^^ source.vba meta.enum.declaration.vba constant.numeric.vba
>
>'   Performs a binary comparison.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.enum.declaration.vba comment.line.apostrophe.vba
>    vbBinaryCompare = 0
#^^^^ source.vba meta.enum.declaration.vba
#    ^^^^^^^^^^^^^^^ source.vba meta.enum.declaration.vba variable.other.enummember.vba
#                   ^ source.vba meta.enum.declaration.vba
#                    ^ source.vba meta.enum.declaration.vba keyword.operator.assignment.vba
#                     ^ source.vba meta.enum.declaration.vba
#                      ^ source.vba meta.enum.declaration.vba constant.numeric.vba
>
>'   Performs a textual comparison.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.enum.declaration.vba comment.line.apostrophe.vba
>    vbTextCompare = 1
#^^^^ source.vba meta.enum.declaration.vba
#    ^^^^^^^^^^^^^ source.vba meta.enum.declaration.vba variable.other.enummember.vba
#                 ^ source.vba meta.enum.declaration.vba
#                  ^ source.vba meta.enum.declaration.vba keyword.operator.assignment.vba
#                   ^ source.vba meta.enum.declaration.vba
#                    ^ source.vba meta.enum.declaration.vba constant.numeric.vba
>
>'   Microsoft Access only.
#^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.enum.declaration.vba comment.line.apostrophe.vba
>'   Performs a comparison based on information in your database.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.enum.declaration.vba comment.line.apostrophe.vba
>    vbDatabaseCompare = 2
#^^^^ source.vba meta.enum.declaration.vba
#    ^^^^^^^^^^^^^^^^^ source.vba meta.enum.declaration.vba variable.other.enummember.vba
#                     ^ source.vba meta.enum.declaration.vba
#                      ^ source.vba meta.enum.declaration.vba keyword.operator.assignment.vba
#                       ^ source.vba meta.enum.declaration.vba
#                        ^ source.vba meta.enum.declaration.vba constant.numeric.vba
>End Enum
#^^^^^^^^ source.vba meta.enum.declaration.vba storage.type.enum.vba
>
>Public Type MyFooType 'Comment
#^^^^^^^^^^^ source.vba meta.struct.declaration.vba storage.type.struct.vba
#           ^ source.vba meta.struct.declaration.vba
#            ^^^^^^^^^ source.vba meta.struct.declaration.vba entity.name.type.struct.vba
#                     ^^^^^^^^^ source.vba meta.struct.declaration.vba comment.line.apostrophe.vba
> 'Comment
#^^^^^^^^^ source.vba meta.struct.declaration.vba comment.line.apostrophe.vba
>    Length As Long 'Comment
#^^^^ source.vba meta.struct.declaration.vba
#    ^^^^^^ source.vba meta.struct.declaration.vba variable.other.readwrite.vba
#          ^ source.vba meta.struct.declaration.vba
#           ^^ source.vba meta.struct.declaration.vba meta.variables.type.vba keyword.control.as.vba
#             ^ source.vba meta.struct.declaration.vba meta.variables.type.vba
#              ^^^^ source.vba meta.struct.declaration.vba meta.variables.type.vba support.type.primitive.Long.vba
#                  ^^^^^^^^^ source.vba meta.struct.declaration.vba comment.line.apostrophe.vba
>     'Comment
#^^^^^^^^^^^^^ source.vba meta.struct.declaration.vba comment.line.apostrophe.vba
>     
>    Length As Long 'Comment
#^^^^ source.vba meta.struct.declaration.vba
#    ^^^^^^ source.vba meta.struct.declaration.vba variable.other.readwrite.vba
#          ^ source.vba meta.struct.declaration.vba
#           ^^ source.vba meta.struct.declaration.vba meta.variables.type.vba keyword.control.as.vba
#             ^ source.vba meta.struct.declaration.vba meta.variables.type.vba
#              ^^^^ source.vba meta.struct.declaration.vba meta.variables.type.vba support.type.primitive.Long.vba
#                  ^^^^^^^^^ source.vba meta.struct.declaration.vba comment.line.apostrophe.vba
>     'Comment
#^^^^^^^^^^^^^ source.vba meta.struct.declaration.vba comment.line.apostrophe.vba
>End Type 'Comment
#^^^^^^^^ source.vba meta.struct.declaration.vba storage.type.struct.vba
#        ^^^^^^^^^ source.vba meta.struct.declaration.vba comment.line.apostrophe.vba
>
>
>' Private Backing Store
#^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'-------------------------------------------------------------------------------
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>Private mBaseDict As Object
#^^^^^^^ source.vba meta.declare.Private.vba storage.modifier.visibility.vba
#       ^ source.vba meta.declare.Private.vba
#        ^^^^^^^^^ source.vba meta.declare.Private.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                 ^ source.vba meta.declare.Private.vba
#                  ^^ source.vba meta.declare.Private.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.Private.vba
#                     ^^^^^^ source.vba meta.declare.Private.vba meta.argument-signature.type.vba support.type.object.Object.vba
>Private mOptionNoItemFail As Boolean
#^^^^^^^ source.vba meta.declare.Private.vba storage.modifier.visibility.vba
#       ^ source.vba meta.declare.Private.vba
#        ^^^^^^^^^^^^^^^^^ source.vba meta.declare.Private.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                         ^ source.vba meta.declare.Private.vba
#                          ^^ source.vba meta.declare.Private.vba keyword.control.as.vba
#                            ^ source.vba meta.declare.Private.vba
#                             ^^^^^^^ source.vba meta.declare.Private.vba meta.argument-signature.type.vba support.type.primitive.Boolean.vba
>Private mLargestValueSize
#^^^^^^^ source.vba meta.declare.Private.vba storage.modifier.visibility.vba
#       ^ source.vba meta.declare.Private.vba
#        ^^^^^^^^^^^^^^^^^ source.vba meta.declare.Private.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>
>' Properties
#^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'-------------------------------------------------------------------------------
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>Public Property Let OptionNoItemFail(val As Boolean)
#^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                   ^ source.vba source.method.signature.vba
#                    ^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                                    ^ source.vba source.method.signature.vba
#                                     ^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba variable.parameter.vba
#                                        ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba
#                                         ^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                                           ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                                            ^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Boolean.vba
#                                                   ^ source.vba source.method.signature.vba
>Attribute OptionNoItemFail.VB_Description = "Prevents a duplicative item add from raising an exception."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                          ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                         ^ source.vba source.method.attribute.vba
#                                          ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                           ^ source.vba source.method.attribute.vba
#                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Prevents a duplicative item add from raising an exception.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>'   When setting an item, it overwrites the existing one.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'   When getting an item, it prevents the key from being added.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>    mOptionNoItemFail = val
#^^^^ source.vba
#    ^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                     ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                        ^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Property
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Public Property Get OptionNoItemFail() As Boolean
#^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                   ^ source.vba source.method.signature.vba
#                    ^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                                    ^ source.vba source.method.signature.vba
#                                     ^ source.vba source.method.signature.vba
#                                      ^ source.vba source.method.signature.vba
#                                       ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                         ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                          ^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.primitive.Boolean.vba
>    OptionNoItemFail = mOptionNoItemFail
#^^^^ source.vba
#    ^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                    ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                       ^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Property
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Public Property Let CompareMode(val As CompareModeType)
#^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                   ^ source.vba source.method.signature.vba
#                    ^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                               ^ source.vba source.method.signature.vba
#                                ^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba variable.parameter.vba
#                                   ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba
#                                    ^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                                      ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                                       ^^^^^^^^^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.object.CompareModeType.vba
#                                                      ^ source.vba source.method.signature.vba
>Attribute CompareMode.VB_Description = "Sets the compare mode for the dictionary."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                     ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                    ^ source.vba source.method.attribute.vba
#                                     ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                      ^ source.vba source.method.attribute.vba
#                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Sets the compare mode for the dictionary.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>'   A value representing the comparison mode used by functions such
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'   as StrComp. Can only be changed while the dictionary has no data.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    mBaseDict.CompareMode = val
#^^^^ source.vba
#    ^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba punctuation.accessor.vba
#              ^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.property
#                         ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                            ^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Property
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Public Property Get CompareMode() As CompareModeType
#^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                   ^ source.vba source.method.signature.vba
#                    ^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                               ^ source.vba source.method.signature.vba
#                                ^ source.vba source.method.signature.vba
#                                 ^ source.vba source.method.signature.vba
#                                  ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                    ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                     ^^^^^^^^^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.object.CompareModeType.vba
>    CompareMode = mBaseDict.CompareMode
#^^^^ source.vba
#    ^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#               ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                  ^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                           ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba punctuation.accessor.vba
#                            ^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.property
>End Property
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Public Property Get Count() As Variant
#^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                   ^ source.vba source.method.signature.vba
#                    ^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                         ^ source.vba source.method.signature.vba
#                          ^ source.vba source.method.signature.vba
#                           ^ source.vba source.method.signature.vba
#                            ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                              ^ source.vba source.method.signature.vba meta.variables.type.vba
#                               ^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.primitive.Variant.vba
>Attribute Count.VB_Description = "Gets the count of the items in the dictionary."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#               ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                              ^ source.vba source.method.attribute.vba
#                               ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                ^ source.vba source.method.attribute.vba
#                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Gets the count of the items in the dictionary.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Count = mBaseDict.Count
#^^^^ source.vba
#    ^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#            ^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                     ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba punctuation.accessor.vba
#                      ^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.property
>End Property
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Public Property Let Item(Key As Variant, val As Variant)
#^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                   ^ source.vba source.method.signature.vba
#                    ^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                        ^ source.vba source.method.signature.vba
#                         ^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba variable.parameter.vba
#                            ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba
#                             ^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                               ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                                ^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
#                                       ^ source.vba source.method.signature.vba meta.arguments.signature.vba punctuation.separator.vba
#                                        ^ source.vba source.method.signature.vba meta.arguments.signature.vba
#                                         ^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba variable.parameter.vba
#                                            ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba
#                                             ^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                                               ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                                                ^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
#                                                       ^ source.vba source.method.signature.vba
>Attribute Item.VB_UserMemId = 0
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#              ^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                           ^ source.vba source.method.attribute.vba
#                            ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                             ^ source.vba source.method.attribute.vba
#                              ^ source.vba source.method.attribute.vba constant.numeric.vba
>Attribute Item.VB_Description = "Sets or returns an item for a specified key in a Dictionary object."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#              ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                             ^ source.vba source.method.attribute.vba
#                              ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                               ^ source.vba source.method.attribute.vba
#                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Sets or returns an item for a specified key in a Dictionary object.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>Try:
#^^^ source.vba variable.other.constant.label.vba
#   ^ source.vba
>    On Error GoTo Catch
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#                 ^ source.vba meta.onErrorStatement.vba
#                  ^^^^^ source.vba meta.onErrorStatement.vba variable.other.constant.label.vba
>    mBaseDict.Item(Key) = val
#^^^^ source.vba
#    ^^^^^^^^^ source.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.function.call.vba punctuation.accessor.vba
#              ^^^^ source.vba meta.function.call.vba entity.name.function.call.vba
#                  ^ source.vba meta.function.call.vba meta.arguments.vba
#                   ^^^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                      ^ source.vba meta.function.call.vba
#                       ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                          ^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>    If Err = 0 Then MetaTrackingAdd val
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^ source.vba meta.flow.inline-if.vba meta.expression.vba
#           ^ source.vba meta.flow.inline-if.vba meta.expression.vba keyword.operator.comparison.vba
#            ^ source.vba meta.flow.inline-if.vba meta.expression.vba
#             ^ source.vba meta.flow.inline-if.vba meta.expression.vba constant.numeric.vba
#              ^ source.vba meta.flow.inline-if.vba
#               ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                   ^ source.vba meta.flow.inline-if.vba
#                    ^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.sub-call.vba entity.name.function.call.vba
#                                   ^ source.vba meta.flow.inline-if.vba meta.sub-call.vba meta.arguments.vba
#                                    ^^^ source.vba meta.flow.inline-if.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>    Exit Property
#^^^^ source.vba
#    ^^^^^^^^^^^^^ source.vba keyword.control.flow.other.vba
>
>Catch:
#^^^^^ source.vba variable.other.constant.label.vba
#     ^ source.vba
>    If mOptionNoItemFail Then Exit Property
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                        ^ source.vba meta.flow.inline-if.vba
#                         ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                             ^ source.vba meta.flow.inline-if.vba
#                              ^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.other.vba
>    Err.Raise Err
#^^^^ source.vba
#    ^^^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#       ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#        ^^^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#             ^ source.vba meta.sub-call.vba meta.arguments.vba
#              ^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Property
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Public Property Set Item(Key As Variant, val As Variant)
#^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                   ^ source.vba source.method.signature.vba
#                    ^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                        ^ source.vba source.method.signature.vba
#                         ^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba variable.parameter.vba
#                            ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba
#                             ^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                               ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                                ^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
#                                       ^ source.vba source.method.signature.vba meta.arguments.signature.vba punctuation.separator.vba
#                                        ^ source.vba source.method.signature.vba meta.arguments.signature.vba
#                                         ^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba variable.parameter.vba
#                                            ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba
#                                             ^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                                               ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                                                ^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
#                                                       ^ source.vba source.method.signature.vba
>Try:
#^^^ source.vba variable.other.constant.label.vba
#   ^ source.vba
>    On Error GoTo Catch
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#                 ^ source.vba meta.onErrorStatement.vba
#                  ^^^^^ source.vba meta.onErrorStatement.vba variable.other.constant.label.vba
>    Set mBaseDict.Item(Key) = val
#^^^^ source.vba
#    ^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#       ^ source.vba meta.sub-call.vba meta.arguments.vba
#        ^^^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                 ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                  ^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                      ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                       ^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                          ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                           ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba
#                            ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba keyword.operator.comparison.vba
#                             ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba
#                              ^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>    MetaTrackingAdd val
#^^^^ source.vba
#    ^^^^^^^^^^^^^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#                   ^ source.vba meta.sub-call.vba meta.arguments.vba
#                    ^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>    Exit Property
#^^^^ source.vba
#    ^^^^^^^^^^^^^ source.vba keyword.control.flow.other.vba
>
>Catch:
#^^^^^ source.vba variable.other.constant.label.vba
#     ^ source.vba
>    If mOptionNoItemFail Then Exit Property
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                        ^ source.vba meta.flow.inline-if.vba
#                         ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                             ^ source.vba meta.flow.inline-if.vba
#                              ^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.other.vba
>    Err.Raise Err
#^^^^ source.vba
#    ^^^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#       ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#        ^^^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#             ^ source.vba meta.sub-call.vba meta.arguments.vba
#              ^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Property
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Public Property Get Item(Key As Variant) As Variant
#^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                   ^ source.vba source.method.signature.vba
#                    ^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                        ^ source.vba source.method.signature.vba
#                         ^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba variable.parameter.vba
#                            ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba
#                             ^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                               ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                                ^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
#                                       ^ source.vba source.method.signature.vba
#                                        ^ source.vba source.method.signature.vba
#                                         ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                           ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                            ^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.primitive.Variant.vba
>    If mOptionNoItemFail And Not mBaseDict.Exists(Key) Then Exit Property
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba
#                         ^^^ source.vba meta.flow.inline-if.vba meta.expression.vba keyword.operator.logical.vba
#                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba
#                             ^^^ source.vba meta.flow.inline-if.vba meta.expression.vba keyword.operator.logical.vba
#                                ^ source.vba meta.flow.inline-if.vba meta.expression.vba
#                                 ^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                                           ^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                                 ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                  ^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                     ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                      ^ source.vba meta.flow.inline-if.vba
#                                                       ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                           ^ source.vba meta.flow.inline-if.vba
#                                                            ^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.other.vba
>
>    If IsObject(mBaseDict.Item(Key)) Then
#^^^^ source.vba
#    ^^ source.vba meta.block-if-else.vba keyword.control.block-if.open.vba
#      ^ source.vba meta.block-if-else.vba
#       ^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#               ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                ^^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                         ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                          ^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                              ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                               ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                  ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                   ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba
#                                    ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba
#                                     ^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.open.vba
>        Set Item = mBaseDict.Item(Key)
#^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.control.vba
#           ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba
#            ^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                   ^^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                            ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                             ^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                 ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                  ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                     ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>    Else
#^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.else.vba
>        Item = mBaseDict.Item(Key)
#^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#            ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#               ^^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                        ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                         ^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                             ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                              ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                 ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>    End If
#^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.close.vba
#       ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^ source.vba meta.block-if-else.vba keyword.control.block-if.close.vba
>End Property
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Public Property Let Key(Key As Variant, NewKey As Variant)
#^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                   ^ source.vba source.method.signature.vba
#                    ^^^ source.vba source.method.signature.vba entity.name.function.vba
#                       ^ source.vba source.method.signature.vba
#                        ^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba variable.parameter.vba
#                           ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba
#                            ^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                              ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                               ^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
#                                      ^ source.vba source.method.signature.vba meta.arguments.signature.vba punctuation.separator.vba
#                                       ^ source.vba source.method.signature.vba meta.arguments.signature.vba
#                                        ^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba variable.parameter.vba
#                                              ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba
#                                               ^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                                                 ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                                                  ^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
#                                                         ^ source.vba source.method.signature.vba
>Attribute Key.VB_Description = "Updates an existing key with a new one."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^ source.vba source.method.attribute.vba entity.name.function.vba
#             ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                            ^ source.vba source.method.attribute.vba
#                             ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                              ^ source.vba source.method.attribute.vba
#                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Updates an existing key with a new one.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    mBaseDict.Key(Key) = NewKey
#^^^^ source.vba
#    ^^^^^^^^^ source.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.function.call.vba punctuation.accessor.vba
#              ^^^ source.vba meta.function.call.vba entity.name.function.call.vba
#                 ^ source.vba meta.function.call.vba meta.arguments.vba
#                  ^^^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                     ^ source.vba meta.function.call.vba
#                      ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                         ^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Property
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Public Property Get GetValue(Key As Variant, Optional def As Variant) As Variant
#^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                   ^ source.vba source.method.signature.vba
#                    ^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                            ^ source.vba source.method.signature.vba
#                             ^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba variable.parameter.vba
#                                ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba
#                                 ^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                                   ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                                    ^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
#                                           ^ source.vba source.method.signature.vba meta.arguments.signature.vba punctuation.separator.vba
#                                            ^ source.vba source.method.signature.vba meta.arguments.signature.vba
#                                             ^^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba storage.type.modifier.vba
#                                                     ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba
#                                                      ^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba variable.parameter.vba
#                                                         ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba
#                                                          ^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                                                            ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                                                             ^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
#                                                                    ^ source.vba source.method.signature.vba
#                                                                     ^ source.vba source.method.signature.vba
#                                                                      ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                                                        ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                                                         ^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.primitive.Variant.vba
>Attribute GetValue.VB_Description = "Gets a value for the specified key or returns the default. if not found"
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                  ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                 ^ source.vba source.method.attribute.vba
#                                  ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                   ^ source.vba source.method.attribute.vba
#                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Gets a value for the specified key or returns the default if not found.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    If mBaseDict.Exists(Key) Then
#^^^^ source.vba
#    ^^ source.vba meta.block-if-else.vba keyword.control.block-if.open.vba
#      ^ source.vba meta.block-if-else.vba
#       ^^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                 ^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                       ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                        ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                           ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba
#                            ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba
#                             ^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.open.vba
>        If IsObject(mBaseDict.Item(Key)) Then
#^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba keyword.control.block-if.open.vba
#          ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba
#           ^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                   ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                    ^^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                             ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                              ^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                  ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                   ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                      ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                       ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba
#                                        ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba
#                                         ^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.open.vba
>            Set GetValue = mBaseDict.Item(Key)
#^^^^^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.control.vba
#               ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba
#                ^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                        ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                           ^^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                    ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                                     ^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                         ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                          ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                             ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>        Else
#^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.else.vba
>            GetValue = mBaseDict.Item(Key)
#^^^^^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                    ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                       ^^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                                 ^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                     ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                      ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                         ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>        End If
#^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.close.vba
#           ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba keyword.control.block-if.close.vba
>    Else
#^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.else.vba
>        Select Case True
#^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^^^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba keyword.control.flow.switch.vba
#                   ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba
#                    ^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.expression.vba constant.language.boolean.vba
>            Case Is = IsMissing(def):
#^^^^^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba
#            ^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba keyword.control.flow.switch.vba
#                ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba
#                 ^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.expression.vba keyword.operator.comparison.vba
#                   ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.expression.vba
#                    ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.expression.vba keyword.operator.comparison.vba
#                     ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.expression.vba
#                      ^^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                               ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                   ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.expression.vba meta.function.call.vba
#                                    ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba keyword.control.line-separator.vba
>                Set GetValue = Nothing
#^^^^^^^^^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba
#                ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.variable-assignment.vba keyword.control.vba
#                   ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.variable-assignment.vba
#                    ^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                            ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                               ^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba constant.language.null.vba
>            Case Is = IsObject(def):
#^^^^^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba
#            ^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba keyword.control.flow.switch.vba
#                ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba
#                 ^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.expression.vba keyword.operator.comparison.vba
#                   ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.expression.vba
#                    ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.expression.vba keyword.operator.comparison.vba
#                     ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.expression.vba
#                      ^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                              ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                               ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                  ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.expression.vba meta.function.call.vba
#                                   ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba keyword.control.line-separator.vba
>                Set GetValue = def
#^^^^^^^^^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba
#                ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.variable-assignment.vba keyword.control.vba
#                   ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.variable-assignment.vba
#                    ^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                            ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                               ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>            Case Else:
#^^^^^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba
#            ^^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba keyword.control.flow.switch.vba
#                     ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba keyword.control.line-separator.vba
>                GetValue = def
#^^^^^^^^^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba
#                ^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                        ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                           ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>        End Select
#^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba
#        ^^^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.switch.vba keyword.control.flow.switch.vba
>    End If
#^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.close.vba
#       ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^ source.vba meta.block-if-else.vba keyword.control.block-if.close.vba
>End Property
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Public Property Get DataRows(Optional OptionUseRowMode As Boolean) As Long
#^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                   ^ source.vba source.method.signature.vba
#                    ^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                            ^ source.vba source.method.signature.vba
#                             ^^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba storage.type.modifier.vba
#                                     ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba
#                                      ^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba variable.parameter.vba
#                                                      ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba
#                                                       ^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                                                         ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                                                          ^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Boolean.vba
#                                                                 ^ source.vba source.method.signature.vba
#                                                                  ^ source.vba source.method.signature.vba
#                                                                   ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                                                     ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                                                      ^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.primitive.Long.vba
>Attribute DataRows.VB_Description = "Returns the row count that would be returned by the GetData method"
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                  ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                 ^ source.vba source.method.attribute.vba
#                                  ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                   ^ source.vba source.method.attribute.vba
#                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Returns the row count that would be returned by the GetData method.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'   The values are always +1 to account for the first row being keys.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>'   OptionUseRowMode=True:  Returns the longest array size of values
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'                           plus row for keys (if they exist).
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'   OptionUseRowMode=False: Returns the count of the keys.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    DataRows = Iif(OptionUseRowMode, mLargestValueSize + LongMin(1, Me.Count), Me.Count)
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#            ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#               ^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                  ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                   ^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                   ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                    ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                     ^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                      ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                                       ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                                        ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                                         ^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                                                ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                                 ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                                                  ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                                                   ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                                    ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.language.me.vba
#                                                                      ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba punctuation.accessor.vba
#                                                                       ^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.property
#                                                                            ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                                                             ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                                                              ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                                               ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.language.me.vba
#                                                                                 ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba punctuation.accessor.vba
#                                                                                  ^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.property
#                                                                                       ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>End Property
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Public Property Get DataCols(Optional OptionUseRowMode As Boolean) As Long
#^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                   ^ source.vba source.method.signature.vba
#                    ^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                            ^ source.vba source.method.signature.vba
#                             ^^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba storage.type.modifier.vba
#                                     ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba
#                                      ^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba variable.parameter.vba
#                                                      ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba
#                                                       ^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                                                         ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                                                          ^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Boolean.vba
#                                                                 ^ source.vba source.method.signature.vba
#                                                                  ^ source.vba source.method.signature.vba
#                                                                   ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                                                     ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                                                      ^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.primitive.Long.vba
>Attribute DataRows.VB_Description = "Returns the column count that would be returned by the GetData method."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                  ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                 ^ source.vba source.method.attribute.vba
#                                  ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                   ^ source.vba source.method.attribute.vba
#                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Returns the column count that would be returned by the GetData method.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'   The values are always +1 to account for the first col being keys.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>'   OptionUseRowMode=True:  Returns the count of the keys.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'   OptionUseRowMode=False: Returns the longest array size of values
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'                           plus 1 col for keys (if they exist).
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    DataCols = Iif(OptionUseRowMode, Me.Count, mLargestValueSize + LongMin(1, Me.Count))
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#            ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#               ^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                  ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                   ^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                   ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                    ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                     ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.language.me.vba
#                                       ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba punctuation.accessor.vba
#                                        ^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.property
#                                             ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                              ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                               ^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                                ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                                                 ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                                                  ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                                                   ^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                                                          ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                                           ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                                                            ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                                                             ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                                              ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.language.me.vba
#                                                                                ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba punctuation.accessor.vba
#                                                                                 ^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.property
#                                                                                      ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                                                                       ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>End Property
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Public Property Get NewEnum() As IUnknown
#^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                   ^ source.vba source.method.signature.vba
#                    ^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                           ^ source.vba source.method.signature.vba
#                            ^ source.vba source.method.signature.vba
#                             ^ source.vba source.method.signature.vba
#                              ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                 ^^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.object.IUnknown.vba
>Attribute NewEnum.VB_Description = "Enables iteration with a For Each loop."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                 ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                ^ source.vba source.method.attribute.vba
#                                 ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                  ^ source.vba source.method.attribute.vba
#                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>Attribute NewEnum.VB_UserMemId = -4
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                 ^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                              ^ source.vba source.method.attribute.vba
#                               ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                ^ source.vba source.method.attribute.vba
#                                 ^^ source.vba source.method.attribute.vba constant.numeric.vba
>'   Enables iteration with a For Each loop.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Set NewEnum = mBaseDict.[_NewEnum]
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#               ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                  ^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                           ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba punctuation.accessor.vba
#                            ^^ source.vba meta.variable-assignment.vba meta.expression.vba
#                              ^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                     ^ source.vba meta.variable-assignment.vba meta.expression.vba
>End Property
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>
>' Constructor
#^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'-------------------------------------------------------------------------------
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>Private Sub Class_Initialize()
#^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#           ^ source.vba source.method.signature.vba
#            ^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                            ^ source.vba source.method.signature.vba
#                             ^ source.vba source.method.signature.vba
>    Set mBaseDict = CreateObject("Scripting.Dictionary")
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                 ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                    ^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                 ^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
#                                                       ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>End Sub
#^^^^^^^ source.vba storage.type.method.close.vba
>
>
>' Methods
#^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'-------------------------------------------------------------------------------
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>Public Sub Add(Key As Variant, Optional val As Variant = Nothing)
#^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#          ^ source.vba source.method.signature.vba
#           ^^^ source.vba source.method.signature.vba entity.name.function.vba
#              ^ source.vba source.method.signature.vba
#               ^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba variable.parameter.vba
#                  ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba
#                   ^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                     ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                      ^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
#                             ^ source.vba source.method.signature.vba meta.arguments.signature.vba punctuation.separator.vba
#                              ^ source.vba source.method.signature.vba meta.arguments.signature.vba
#                               ^^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba storage.type.modifier.vba
#                                       ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba
#                                        ^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba variable.parameter.vba
#                                           ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba
#                                            ^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                                              ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                                               ^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
#                                                      ^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                                         ^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba constant.language.null.vba
#                                                                ^ source.vba source.method.signature.vba
>Attribute Add.VB_Description = "Adds a key and value pair to the dictionary."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^ source.vba source.method.attribute.vba entity.name.function.vba
#             ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                            ^ source.vba source.method.attribute.vba
#                             ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                              ^ source.vba source.method.attribute.vba
#                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Adds a key and value pair to the dictionary.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>'   If the dictionary is in NoItemFail mode, and the key exists, the value
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'   will be overwritten wrather than throwing a duplicate key exception.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>'   Args:
#^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'       Key: The key to add the value to.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'       val: The value to add.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>    On Error Resume Next
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
>    mBaseDict.Add Key, val
#^^^^ source.vba
#    ^^^^^^^^^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#              ^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#                 ^ source.vba meta.sub-call.vba meta.arguments.vba
#                  ^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                     ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                      ^ source.vba meta.sub-call.vba meta.arguments.vba
#                       ^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>    Select Case True
#^^^^ source.vba
#    ^^^^^^^^^^^ source.vba meta.flow.switch.vba keyword.control.flow.switch.vba
#               ^ source.vba meta.flow.switch.vba
#                ^^^^ source.vba meta.flow.switch.vba meta.expression.vba constant.language.boolean.vba
>        Case Is = Err = 457 And mOptionNoItemFail
#^^^^^^^^ source.vba meta.flow.switch.vba
#        ^^^^ source.vba meta.flow.switch.vba keyword.control.flow.switch.vba
#            ^ source.vba meta.flow.switch.vba
#             ^^ source.vba meta.flow.switch.vba meta.expression.vba keyword.operator.comparison.vba
#               ^ source.vba meta.flow.switch.vba meta.expression.vba
#                ^ source.vba meta.flow.switch.vba meta.expression.vba keyword.operator.comparison.vba
#                 ^ source.vba meta.flow.switch.vba meta.expression.vba
#                  ^^^ source.vba meta.flow.switch.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                     ^ source.vba meta.flow.switch.vba meta.expression.vba
#                      ^ source.vba meta.flow.switch.vba meta.expression.vba keyword.operator.comparison.vba
#                       ^ source.vba meta.flow.switch.vba meta.expression.vba
#                        ^^^ source.vba meta.flow.switch.vba meta.expression.vba constant.numeric.vba
#                           ^ source.vba meta.flow.switch.vba meta.expression.vba
#                            ^^^ source.vba meta.flow.switch.vba meta.expression.vba keyword.operator.logical.vba
#                               ^ source.vba meta.flow.switch.vba meta.expression.vba
#                                ^^^^^^^^^^^^^^^^^ source.vba meta.flow.switch.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>            If IsObject(val) Then
#^^^^^^^^^^^^ source.vba meta.flow.switch.vba
#            ^^ source.vba meta.flow.switch.vba meta.block-if-else.vba keyword.control.block-if.open.vba
#              ^ source.vba meta.flow.switch.vba meta.block-if-else.vba
#               ^^^^^^^^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                       ^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                        ^^^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                           ^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba
#                            ^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba
#                             ^^^^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.open.vba
>                Set Item(Key) = val
#^^^^^^^^^^^^^^^^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                ^^^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.sub-call.vba entity.name.function.call.vba
#                   ^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.sub-call.vba meta.arguments.vba
#                    ^^^^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^^^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                            ^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                             ^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba
#                              ^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba keyword.operator.comparison.vba
#                               ^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba
#                                ^^^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>            Else
#^^^^^^^^^^^^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.else.vba
>                Item(Key) = val
#^^^^^^^^^^^^^^^^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                ^^^^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba entity.name.function.call.vba
#                    ^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba
#                     ^^^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                        ^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba
#                         ^^^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                            ^^^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>            End If
#^^^^^^^^^^^^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.close.vba
#               ^ source.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                ^^ source.vba meta.flow.switch.vba meta.block-if-else.vba keyword.control.block-if.close.vba
>        Case Is = Err = 457
#^^^^^^^^ source.vba meta.flow.switch.vba
#        ^^^^ source.vba meta.flow.switch.vba keyword.control.flow.switch.vba
#            ^ source.vba meta.flow.switch.vba
#             ^^ source.vba meta.flow.switch.vba meta.expression.vba keyword.operator.comparison.vba
#               ^ source.vba meta.flow.switch.vba meta.expression.vba
#                ^ source.vba meta.flow.switch.vba meta.expression.vba keyword.operator.comparison.vba
#                 ^ source.vba meta.flow.switch.vba meta.expression.vba
#                  ^^^ source.vba meta.flow.switch.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                     ^ source.vba meta.flow.switch.vba meta.expression.vba
#                      ^ source.vba meta.flow.switch.vba meta.expression.vba keyword.operator.comparison.vba
#                       ^ source.vba meta.flow.switch.vba meta.expression.vba
#                        ^^^ source.vba meta.flow.switch.vba meta.expression.vba constant.numeric.vba
>            Err.Raise vbObjectError + 457, "Dictionary", _
#^^^^^^^^^^^^ source.vba meta.flow.switch.vba
#            ^^^ source.vba meta.flow.switch.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#               ^ source.vba meta.flow.switch.vba meta.sub-call.vba punctuation.accessor.vba
#                ^^^^^ source.vba meta.flow.switch.vba meta.sub-call.vba entity.name.function.call.vba
#                     ^ source.vba meta.flow.switch.vba meta.sub-call.vba meta.arguments.vba
#                      ^^^^^^^^^^^^^ source.vba meta.flow.switch.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                   ^ source.vba meta.flow.switch.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba
#                                    ^ source.vba meta.flow.switch.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                     ^ source.vba meta.flow.switch.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba
#                                      ^^^ source.vba meta.flow.switch.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                         ^ source.vba meta.flow.switch.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                                          ^ source.vba meta.flow.switch.vba meta.sub-call.vba meta.arguments.vba
#                                           ^^^^^^^^^^^^ source.vba meta.flow.switch.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
#                                                       ^ source.vba meta.flow.switch.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                                                        ^ source.vba meta.flow.switch.vba meta.sub-call.vba meta.arguments.vba
#                                                         ^^ source.vba meta.flow.switch.vba meta.sub-call.vba meta.arguments.vba keyword.control.line-continuation.vba
>                Key & " is already associated with the dictionary."
#^^^^^^^^^^^^^^^^ source.vba meta.flow.switch.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba
#                ^^^ source.vba meta.flow.switch.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                   ^ source.vba meta.flow.switch.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba
#                    ^ source.vba meta.flow.switch.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba keyword.operator.arithmetic.vba
#                     ^ source.vba meta.flow.switch.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba
#                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.switch.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
>        Case Is = Err <> 0
#^^^^^^^^ source.vba meta.flow.switch.vba
#        ^^^^ source.vba meta.flow.switch.vba keyword.control.flow.switch.vba
#            ^ source.vba meta.flow.switch.vba
#             ^^ source.vba meta.flow.switch.vba meta.expression.vba keyword.operator.comparison.vba
#               ^ source.vba meta.flow.switch.vba meta.expression.vba
#                ^ source.vba meta.flow.switch.vba meta.expression.vba keyword.operator.comparison.vba
#                 ^ source.vba meta.flow.switch.vba meta.expression.vba
#                  ^^^ source.vba meta.flow.switch.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                     ^ source.vba meta.flow.switch.vba meta.expression.vba
#                      ^ source.vba meta.flow.switch.vba meta.expression.vba keyword.operator.comparison.vba
#                       ^ source.vba meta.flow.switch.vba meta.expression.vba keyword.operator.comparison.vba
#                        ^ source.vba meta.flow.switch.vba meta.expression.vba
#                         ^ source.vba meta.flow.switch.vba meta.expression.vba constant.numeric.vba
>            Err.Raise Err
#^^^^^^^^^^^^ source.vba meta.flow.switch.vba
#            ^^^ source.vba meta.flow.switch.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#               ^ source.vba meta.flow.switch.vba meta.sub-call.vba punctuation.accessor.vba
#                ^^^^^ source.vba meta.flow.switch.vba meta.sub-call.vba entity.name.function.call.vba
#                     ^ source.vba meta.flow.switch.vba meta.sub-call.vba meta.arguments.vba
#                      ^^^ source.vba meta.flow.switch.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>        Case Else
#^^^^^^^^ source.vba meta.flow.switch.vba
#        ^^^^^^^^^ source.vba meta.flow.switch.vba keyword.control.flow.switch.vba
>            MetaTrackingAdd val
#^^^^^^^^^^^^ source.vba meta.flow.switch.vba
#            ^^^^^^^^^^^^^^^ source.vba meta.flow.switch.vba meta.sub-call.vba entity.name.function.call.vba
#                           ^ source.vba meta.flow.switch.vba meta.sub-call.vba meta.arguments.vba
#                            ^^^ source.vba meta.flow.switch.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>    End Select
#^^^^ source.vba meta.flow.switch.vba
#    ^^^^^^^^^^ source.vba meta.flow.switch.vba keyword.control.flow.switch.vba
>End Sub
#^^^^^^^ source.vba storage.type.method.close.vba
>
>Public Sub Remove(Key As Variant)
#^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#          ^ source.vba source.method.signature.vba
#           ^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                 ^ source.vba source.method.signature.vba
#                  ^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba variable.parameter.vba
#                     ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba
#                      ^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                        ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                         ^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
#                                ^ source.vba source.method.signature.vba
>Attribute Remove.VB_Description = "Removes a key from the Scripting.Dictionary."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                               ^ source.vba source.method.attribute.vba
#                                ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                 ^ source.vba source.method.attribute.vba
#                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Removes a key from the Scripting.Dictionary.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>'   Args:
#^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'       Key: The key to remove.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>    Dim val As Variant
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#           ^ source.vba meta.declare.variable.vba
#            ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#              ^ source.vba meta.declare.variable.vba
#               ^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
>    If IsObject(Me.Item(Key)) Then
#^^^^ source.vba
#    ^^ source.vba meta.block-if-else.vba keyword.control.block-if.open.vba
#      ^ source.vba meta.block-if-else.vba
#       ^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#               ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                ^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba variable.language.me.vba
#                  ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                   ^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                       ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                        ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                           ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                            ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba
#                             ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba
#                              ^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.open.vba
>        Set val = Me.Item(Key)
#^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.control.vba
#           ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba
#            ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#               ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                  ^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba variable.language.me.vba
#                    ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                     ^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                         ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                          ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                             ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>    Else
#^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.else.vba
>        val = Me.Item(Key)
#^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#           ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#              ^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba variable.language.me.vba
#                ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                 ^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                     ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                      ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                         ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>    End If
#^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.close.vba
#       ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^ source.vba meta.block-if-else.vba keyword.control.block-if.close.vba
>    mBaseDict.Remove Key
#^^^^ source.vba
#    ^^^^^^^^^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#              ^^^^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#                    ^ source.vba meta.sub-call.vba meta.arguments.vba
#                     ^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>    MetaTrackingRemove val
#^^^^ source.vba
#    ^^^^^^^^^^^^^^^^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#                      ^ source.vba meta.sub-call.vba meta.arguments.vba
#                       ^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Sub
#^^^^^^^ source.vba storage.type.method.close.vba
>
>Public Sub RemoveAll()
#^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#          ^ source.vba source.method.signature.vba
#           ^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                    ^ source.vba source.method.signature.vba
#                     ^ source.vba source.method.signature.vba
>Attribute RemoveAll.VB_Description = "Removes all keys from the dictionary."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                   ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                  ^ source.vba source.method.attribute.vba
#                                   ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                    ^ source.vba source.method.attribute.vba
#                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Removes all keys from the dictionary.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>    mBaseDict.RemoveAll
#^^^^ source.vba
#    ^^^^^^^^^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#              ^^^^^^^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
>    mLargestValueSize = 0
#^^^^ source.vba
#    ^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                     ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                        ^ source.vba meta.variable-assignment.vba meta.expression.vba constant.numeric.vba
>End Sub
#^^^^^^^ source.vba storage.type.method.close.vba
>
>Public Sub AddBulk( _
#^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#          ^ source.vba source.method.signature.vba
#           ^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                  ^ source.vba source.method.signature.vba
#                   ^ source.vba source.method.signature.vba
#                    ^^ source.vba source.method.signature.vba keyword.control.line-continuation.vba
>    ValueArray2D As Variant, _
#^^^^ source.vba source.method.signature.vba
#    ^^^^^^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba variable.parameter.vba
#                ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba
#                 ^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                   ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                    ^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
#                           ^ source.vba source.method.signature.vba meta.arguments.signature.vba punctuation.separator.vba
#                            ^ source.vba source.method.signature.vba meta.arguments.signature.vba
#                             ^^ source.vba source.method.signature.vba meta.arguments.signature.vba keyword.control.line-continuation.vba
>    Optional OptionUseRowMode As Boolean, _
#^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba
#    ^^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba storage.type.modifier.vba
#            ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba
#             ^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba variable.parameter.vba
#                             ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba
#                              ^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                                ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                                 ^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Boolean.vba
#                                        ^ source.vba source.method.signature.vba meta.arguments.signature.vba punctuation.separator.vba
#                                         ^ source.vba source.method.signature.vba meta.arguments.signature.vba
#                                          ^^ source.vba source.method.signature.vba meta.arguments.signature.vba keyword.control.line-continuation.vba
>    Optional OptionCountKeys As Boolean, _
#^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba
#    ^^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba storage.type.modifier.vba
#            ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba
#             ^^^^^^^^^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba variable.parameter.vba
#                            ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba
#                             ^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                               ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                                ^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Boolean.vba
#                                       ^ source.vba source.method.signature.vba meta.arguments.signature.vba punctuation.separator.vba
#                                        ^ source.vba source.method.signature.vba meta.arguments.signature.vba
#                                         ^^ source.vba source.method.signature.vba meta.arguments.signature.vba keyword.control.line-continuation.vba
>    Optional DefaultValue As Variant, _
#^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba
#    ^^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba storage.type.modifier.vba
#            ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba
#             ^^^^^^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba variable.parameter.vba
#                         ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba
#                          ^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                            ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                             ^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
#                                    ^ source.vba source.method.signature.vba meta.arguments.signature.vba punctuation.separator.vba
#                                     ^ source.vba source.method.signature.vba meta.arguments.signature.vba
#                                      ^^ source.vba source.method.signature.vba meta.arguments.signature.vba keyword.control.line-continuation.vba
>    Optional HeadersIndex As Long = 1)
#^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba
#    ^^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba storage.type.modifier.vba
#            ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba
#             ^^^^^^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba variable.parameter.vba
#                         ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba
#                          ^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                            ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                             ^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
#                                 ^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                    ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba constant.numeric.vba
#                                     ^ source.vba source.method.signature.vba
>Attribute AddBulk.VB_Description = "Adds key value pairs from a 2D array."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                 ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                ^ source.vba source.method.attribute.vba
#                                 ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                  ^ source.vba source.method.attribute.vba
#                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Adds key value pairs from a 2D array.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>'   Supports keys as first row or firt column. Automatically detects array
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'   size and adds values based on number of values per key.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'        0: Keys only (values are Nothing)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'        1: Single values only
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'       >1: Values are a 1D array of values
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>'   Args:
#^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'       ValueArray2D: The data to add to the dictionary.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'       OptionUseRowMode: Use the first row instead of column as keys.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'       OptionCountKeys: The value is the count of keys.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'       DefaultValue: Set a default item value.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'       HeadersIndex: Specify the header index or column.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>'   Notes:
#^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'       The use of OptionCountKeys implies duplicate keys so OptionNoItemFail
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'       will be forced to True regardless of its current setting.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>'       There is currently only support for 1-based arrays such that you would
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'       get with a Range, e.g., Range("A1:B10").Value = (1 To 10, 1 To 2).
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>        ' Dictionary key
#^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim v As Variant    ' Dictionary value
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
#                    ^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba
#                        ^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>
>    If OptionCountKeys Then mOptionNoItemFail = True
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                      ^ source.vba meta.flow.inline-if.vba
#                       ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                           ^ source.vba meta.flow.inline-if.vba
#                            ^^^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                             ^^^ source.vba meta.flow.inline-if.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                                ^^^^ source.vba meta.flow.inline-if.vba meta.variable-assignment.vba meta.expression.vba constant.language.boolean.vba
>
>'   Transpose the array if we're using row mode so that we can use the same
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'   logic to add bulk data to the dictionary (as if it is in column mode).
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    If OptionUseRowMode Then
#^^^^ source.vba
#    ^^ source.vba meta.block-if-else.vba keyword.control.block-if.open.vba
#      ^ source.vba meta.block-if-else.vba
#       ^^^^^^^^^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                       ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba
#                        ^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.open.vba
>        ValueArray2D = Application.Transpose(ValueArray2D)
#^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^^^^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                    ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                       ^^^^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                  ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                                   ^^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                            ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                             ^^^^^^^^^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                         ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>    End If
#^^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.close.vba
#       ^ source.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^ source.vba meta.block-if-else.vba keyword.control.block-if.close.vba
>
>'   Set the shape of the data.   
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim rowCount As Long
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                ^ source.vba meta.declare.variable.vba
#                 ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                   ^ source.vba meta.declare.variable.vba
#                    ^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    rowCount = UBound(ValueArray2D, 1)
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#            ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#               ^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                     ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                      ^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                  ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                   ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                    ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                     ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>    Dim colCount As Long
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                ^ source.vba meta.declare.variable.vba
#                 ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                   ^ source.vba meta.declare.variable.vba
#                    ^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    colCount = UBound(ValueArray2D, 2)
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#            ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#               ^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                     ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                      ^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                  ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                   ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                    ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                     ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>'   Add the keys and values to the dictionary.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim i As Long
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    For i = 1 To rowCount
#^^^^ source.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                 ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-or-property.vba variable.other.readwrite.vba
>        Dim k As Variant
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba storage.type.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba keyword.control.as.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#                 ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
>        k = ValueArray2D(i, HeadersIndex)
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#            ^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                            ^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>'       Determine the value and add it.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba comment.line.apostrophe.vba
>        Select Case True
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba keyword.control.flow.switch.vba
#                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba
#                    ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.expression.vba constant.language.boolean.vba
>            Case Is = OptionCountKeys:
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba
#            ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba keyword.control.flow.switch.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba
#                 ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.expression.vba keyword.operator.comparison.vba
#                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.expression.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.expression.vba keyword.operator.comparison.vba
#                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.expression.vba
#                      ^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba keyword.control.line-separator.vba
>                v = Me.GetValue(k, 0) + 1
#^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                 ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                    ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba variable.language.me.vba
#                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                       ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
#                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba
#                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba constant.numeric.vba
>            Case Is = colCount = 2:
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba
#            ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba keyword.control.flow.switch.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba
#                 ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.expression.vba keyword.operator.comparison.vba
#                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.expression.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.expression.vba keyword.operator.comparison.vba
#                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.expression.vba
#                      ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.expression.vba
#                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.expression.vba keyword.operator.comparison.vba
#                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.expression.vba
#                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.expression.vba constant.numeric.vba
#                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba keyword.control.line-separator.vba
>                v = ValueArray2D(i, 2)
#^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                 ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                    ^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>            Case Is = colCount > 2:
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba
#            ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba keyword.control.flow.switch.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba
#                 ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.expression.vba keyword.operator.comparison.vba
#                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.expression.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.expression.vba keyword.operator.comparison.vba
#                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.expression.vba
#                      ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.expression.vba
#                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.expression.vba keyword.operator.comparison.vba
#                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.expression.vba
#                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.expression.vba constant.numeric.vba
#                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba keyword.control.line-separator.vba
>                v = GetDataValues(ValueArray2D, i, HeadersIndex)
#^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                 ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                    ^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                  ^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                   ^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>            Case Else:
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba
#            ^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba keyword.control.flow.switch.vba
#                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba keyword.control.line-separator.vba
>                If IsObject(DefaultValue) Then
#^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba
#                ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.block-if-else.vba keyword.control.block-if.open.vba
#                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.block-if-else.vba
#                   ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                            ^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba
#                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba
#                                          ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.open.vba
>                    Set v = DefaultValue
#^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                    ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.control.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                         ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                            ^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>                Else
#^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.else.vba
>                    v = DefaultValue
#^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                     ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                        ^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>                End If
#^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.close.vba
#                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                    ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba meta.block-if-else.vba keyword.control.block-if.close.vba
>        End Select
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba
#        ^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.switch.vba keyword.control.flow.switch.vba
>        Me.Add k, v
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba variable.language.me.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba punctuation.accessor.vba
#           ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba entity.name.function.call.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba
#                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>    Next i
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba
#         ^ source.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Sub
#^^^^^^^ source.vba storage.type.method.close.vba
>
>Public Function Exists(Key As Variant) As Boolean
#^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#               ^ source.vba source.method.signature.vba
#                ^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                      ^ source.vba source.method.signature.vba
#                       ^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba variable.parameter.vba
#                          ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba
#                           ^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                             ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                              ^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
#                                     ^ source.vba source.method.signature.vba
#                                      ^ source.vba source.method.signature.vba
#                                       ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                         ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                          ^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.primitive.Boolean.vba
>Attribute Exists.VB_Description = "Checks if a key exists in the dictionary."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                               ^ source.vba source.method.attribute.vba
#                                ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                 ^ source.vba source.method.attribute.vba
#                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Checks if a key exists in the dictionary.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>'   Args:
#^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'       Key: The key to check.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>'   Returns:
#^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'       True if the key exists.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>    Exists = mBaseDict.Exists(Key)
#^^^^ source.vba
#    ^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#             ^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                      ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                       ^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                             ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                              ^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                 ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>End Function
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Public Function Items() As Variant()
#^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#               ^ source.vba source.method.signature.vba
#                ^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                     ^ source.vba source.method.signature.vba
#                      ^ source.vba source.method.signature.vba
#                       ^ source.vba source.method.signature.vba
#                        ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                          ^ source.vba source.method.signature.vba meta.variables.type.vba
#                           ^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.primitive.Variant.vba
#                                  ^^^ source.vba
>Attribute Items.VB_Description = "Returns all values in the dictionary."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#               ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                              ^ source.vba source.method.attribute.vba
#                               ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                ^ source.vba source.method.attribute.vba
#                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Returns all values in the dictionary.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>'   Returns:
#^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'       An array of values.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>    Items = mBaseDict.Items
#^^^^ source.vba
#    ^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#            ^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                     ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba punctuation.accessor.vba
#                      ^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.property
>End Function
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Public Function Keys() As Variant()
#^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#               ^ source.vba source.method.signature.vba
#                ^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                    ^ source.vba source.method.signature.vba
#                     ^ source.vba source.method.signature.vba
#                      ^ source.vba source.method.signature.vba
#                       ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                         ^ source.vba source.method.signature.vba meta.variables.type.vba
#                          ^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.primitive.Variant.vba
#                                 ^^^ source.vba
>Attribute Keys.VB_Description = "Returns all keys in the dictionary."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#              ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                             ^ source.vba source.method.attribute.vba
#                              ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                               ^ source.vba source.method.attribute.vba
#                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Returns all keys in the dictionary.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>'   Returns:
#^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'       An array of keys.
#^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>    Keys = mBaseDict.Keys
#^^^^ source.vba
#    ^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#        ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#           ^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                    ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba punctuation.accessor.vba
#                     ^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.property
>End Function
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Public Function GetData(Optional OptionUseRowMode As Boolean) As Variant
#^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#               ^ source.vba source.method.signature.vba
#                ^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                       ^ source.vba source.method.signature.vba
#                        ^^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba storage.type.modifier.vba
#                                ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba
#                                 ^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba variable.parameter.vba
#                                                 ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba
#                                                  ^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                                                    ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                                                     ^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.optional.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Boolean.vba
#                                                            ^ source.vba source.method.signature.vba
#                                                             ^ source.vba source.method.signature.vba
#                                                              ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                                                ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                                                 ^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.primitive.Variant.vba
>Attribute GetData.VB_Description = "Returns the dictionary data as a 2D array with keys representing headers."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                 ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                ^ source.vba source.method.attribute.vba
#                                 ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                  ^ source.vba source.method.attribute.vba
#                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Returns the dictionary data as a 2D array with keys representing headers.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>'   Args:
#^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'       OptionUseRowMode: Data is returned with keys as first column.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>'   Returns:
#^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'       A 2D array of keys and values. Arrays of values will be converted to
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'       row data, or column data if OptionUseRowMode is True.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>'   Set up the metadata to work with.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim arrKeys As Variant
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#               ^ source.vba meta.declare.variable.vba
#                ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                  ^ source.vba meta.declare.variable.vba
#                   ^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
>    arrKeys = mBaseDict.Keys()
#^^^^ source.vba
#    ^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#           ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#              ^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                       ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                        ^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                            ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                             ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>    Dim arrVals As Variant
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#               ^ source.vba meta.declare.variable.vba
#                ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                  ^ source.vba meta.declare.variable.vba
#                   ^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
>    arrVals = mBaseDict.Items()
#^^^^ source.vba
#    ^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#           ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#              ^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                       ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                        ^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                             ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                              ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>    Dim dataRowCount As Long
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                    ^ source.vba meta.declare.variable.vba
#                     ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                       ^ source.vba meta.declare.variable.vba
#                        ^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    dataRowCount = Me.DataRows()
#^^^^ source.vba
#    ^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                   ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba variable.language.me.vba
#                     ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                      ^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                              ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                               ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>    Dim dataColCount As Long
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                    ^ source.vba meta.declare.variable.vba
#                     ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                       ^ source.vba meta.declare.variable.vba
#                        ^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    dataColCount = Me.DataCols()
#^^^^ source.vba
#    ^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                   ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba variable.language.me.vba
#                     ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                      ^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                              ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                               ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>'   Set up results array in the shape of the keys and values
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'   adding an additional column to fit the keys as a column
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim results() As Variant
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#               ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.variable.vba
#                     ^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
>    ReDim results(1 To dataRowCount, _
#^^^^ source.vba
#    ^^^^^ source.vba keyword.array.vba
#         ^ source.vba
#          ^^^^^^^ source.vba meta.function.call.vba entity.name.function.call.vba
#                 ^ source.vba meta.function.call.vba meta.arguments.vba
#                  ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                   ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                    ^^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.range.vba
#                      ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                       ^^^^^^^^^^^^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                   ^ source.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                    ^ source.vba meta.function.call.vba meta.arguments.vba
#                                     ^^ source.vba meta.function.call.vba meta.arguments.vba keyword.control.line-continuation.vba
>        1 To dataColCount)
#^^^^^^^^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#        ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#         ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#          ^^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.range.vba
#            ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#             ^^^^^^^^^^^^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                         ^ source.vba meta.function.call.vba
>
>'   Populate the row(s) and column(s)
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim r As Long
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    For r = 1 To dataRowCount
#^^^^ source.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                 ^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-or-property.vba variable.other.readwrite.vba
>        results(r, 1) = arrKeys(r - 1)
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba
#                     ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                        ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>        If dataColCount > 2 Then
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba keyword.control.block-if.open.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba
#           ^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba keyword.operator.comparison.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba constant.numeric.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba
#                            ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.open.vba
>'           Populate columns for multi-column
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>            Dim maxCols As Long
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba storage.type.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#                ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#                        ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba keyword.control.as.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#                           ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>            maxCols = UBound(arrVals(r - 1)) + 2
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                   ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                      ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                             ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
#                                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba
#                                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba
#                                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba constant.numeric.vba
>            Dim c As Long
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba storage.type.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#                  ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba keyword.control.as.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>            For c = 2 To dataColCount
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#                      ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                         ^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-or-property.vba variable.other.readwrite.vba
>                results(r, c) = arrVals(r - 1)(c - 2)
#^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#                ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba
#                             ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
#                                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba
#                                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba
#                                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba
#                                                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba constant.numeric.vba
#                                                    ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
>                If c = maxCols Then Exit For
#^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba
#                ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba
#                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba
#                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba keyword.operator.comparison.vba
#                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba
#                       ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba
#                               ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba
#                                    ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba keyword.control.flow.loop.vba
>            Next c
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#            ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>        ElseIf dataColCount = 2 Then
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.else.vba
#            ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba keyword.control.block-if.open.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba
#               ^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba keyword.operator.comparison.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba constant.numeric.vba
#                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba
#                                ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.open.vba
>'           Populate single value
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>            results(r, 2) = arrVals(r - 1)
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba entity.name.function.call.vba
#                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba
#                         ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                            ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>        End If
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.close.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba keyword.control.block-if.close.vba
>    Next r
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.sub-call.vba entity.name.function.call.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.sub-call.vba meta.arguments.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>'   Return the data as normal or row mode.    
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>    If OptionUseRowMode Then
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba keyword.control.block-if.open.vba
#      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba
#       ^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba
#                        ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.open.vba
>        GetData = Application.Transpose(results)
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#               ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                  ^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                              ^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                        ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>    Else
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.else.vba
>        GetData = results
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#               ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                  ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>    End If
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.close.vba
#       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba keyword.control.block-if.close.vba
>End Function
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba storage.type.method.close.vba
>
>
>' Helpers
#^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'-------------------------------------------------------------------------------
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>Private Function GetDataValues(arr As Variant, rIdx As Long, hIdx As Long) As Variant
#^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba storage.type.method.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba
#                 ^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba entity.name.function.vba
#                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba
#                               ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba variable.parameter.vba
#                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba
#                                   ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                                      ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
#                                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba punctuation.separator.vba
#                                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba
#                                               ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba variable.parameter.vba
#                                                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba
#                                                    ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                                                       ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
#                                                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba punctuation.separator.vba
#                                                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba
#                                                             ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba variable.parameter.vba
#                                                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba
#                                                                  ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                                                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                                                                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
#                                                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba
#                                                                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba
#                                                                           ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                                                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.variables.type.vba
#                                                                              ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.variables.type.vba support.type.primitive.Variant.vba
>Attribute GetDataValues.VB_Description = "Returns a 1D array of values from the data."
#^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba entity.name.function.vba
#                       ^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba support.variable.property.vba
#                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba
#                                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba
#                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba string.quoted.double.vba
>'   Returns a 1D array of values from the data.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'
#^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'   Args:
#^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'       arr: The source array of values.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'       rIdx: The index row.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'       hIdx: The header (key) index.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'
#^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'   Returns:
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'       An array of values, minus the key.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'
#^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>    Dim result As Variant
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#        ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#               ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba keyword.control.as.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#                  ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
>    ReDim result(UBound(arr, 2) - 2)
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.array.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#          ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba entity.name.function.call.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba
#                 ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                        ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba
>
>    Dim i As Long
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#          ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#             ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    For i = 1 To UBound(arr, 2)
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                 ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                        ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                           ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba constant.numeric.vba
#                              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
>        If i <> hIdx Then
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba keyword.control.block-if.open.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba keyword.operator.comparison.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba keyword.operator.comparison.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba
#                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.open.vba
>            Result(i - IIf(i < hIdx, 1, 2)) = arr(rIdx, i)
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba entity.name.function.call.vba
#                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba
#                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.arithmetic.vba
#                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                       ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.comparison.vba
#                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                               ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba
#                                           ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                              ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                  ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>        End If
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.close.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba keyword.control.block-if.close.vba
>    Next i
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#    ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>    GetDataValues = result
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                 ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                    ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Function
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba storage.type.method.close.vba
>
>Private Function NArrayDimensions(arr As Variant) As Long
#^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba storage.type.method.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba
#                 ^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba entity.name.function.vba
#                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba
#                                  ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba variable.parameter.vba
#                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba
#                                      ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                                         ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
#                                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba
#                                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba
#                                                  ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.variables.type.vba
#                                                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.variables.type.vba support.type.primitive.Long.vba
>Attribute NArrayDimensions.VB_Description = "Returns the number of dimensions for the passed in array."
#^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba entity.name.function.vba
#                          ^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba support.variable.property.vba
#                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba
#                                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba
#                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba string.quoted.double.vba
>'   Returns the number of dimensions for the passed in array.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'
#^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'   This is a hack that intentionally seeks to raise and catch an
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'   exception as there is no property or elegant way to do this.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'
#^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'   Args:
#^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'       arr: The array to test.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'
#^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'   Returns:
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'       The number of dimensions for the passed in array.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'
#^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'   Raises:
#^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'
#^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>
>'   Test array dimensions until exception raised
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>    On Error GoTo Finally
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.onErrorStatement.vba
#             ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.onErrorStatement.vba
#                  ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.onErrorStatement.vba variable.other.constant.label.vba
>    Dim i As Long
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#          ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#             ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    Do
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.flow.loop.vba
>        i = i + 1
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba keyword.operator.arithmetic.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba constant.numeric.vba
>        NArrayDimensions = UBound(arr, i)
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                        ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                           ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                  ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>    Loop
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.flow.loop.vba
>
>Finally:
#^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.sub-call.vba entity.name.function.call.vba
#       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.line-separator.vba
>'   Expect to catch a Type mismatch exception.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'   Expect to catch a Subscript out of range exception.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>    If Err = 13 Or Err = 9 Then NArrayDimensions = i - 1 Else Err.Raise Err
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba
#    ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba
#       ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba meta.expression.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba meta.expression.vba keyword.operator.comparison.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba meta.expression.vba
#             ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba meta.expression.vba constant.numeric.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba meta.expression.vba
#                ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba meta.expression.vba keyword.operator.logical.vba
#                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba meta.expression.vba
#                   ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba meta.expression.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba meta.expression.vba keyword.operator.comparison.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba meta.expression.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba meta.expression.vba constant.numeric.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba
#                           ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba keyword.control.flow.decision.vba
#                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba
#                                ^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba meta.variable-assignment.vba meta.expression.vba
#                                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba meta.variable-assignment.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba meta.variable-assignment.vba meta.expression.vba
#                                                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba meta.variable-assignment.vba meta.expression.vba constant.numeric.vba
#                                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba
#                                                         ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba keyword.control.flow.decision.vba
#                                                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba
#                                                              ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba meta.sub-call.vba punctuation.accessor.vba
#                                                                  ^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba meta.sub-call.vba entity.name.function.call.vba
#                                                                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba meta.sub-call.vba meta.arguments.vba
#                                                                        ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if-else.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Function
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba storage.type.method.close.vba
>
>Private Sub MetaTrackingAdd(val As Variant)
#^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba storage.type.method.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba
#            ^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba entity.name.function.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba
#                            ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba variable.parameter.vba
#                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba
#                                ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                                   ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
#                                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba
>Attribute MetaTrackingAdd.VB_Description = "Tracks the largest sized value array when adding a key to the dictionary."
#^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba entity.name.function.vba
#                         ^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba support.variable.property.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba
#                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba
#                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba string.quoted.double.vba
>'   Tracks the largest sized value array when adding a key to the dictionary.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'
#^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'   Args:
#^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'       val: The value being added.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'
#^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>    Dim valSize As Long
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#        ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#                ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba keyword.control.as.vba
#                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#                   ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    valSize = GetValueOrArraySize(val)
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#           ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#              ^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                  ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>    If valSize > mLargestValueSize Then
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba keyword.control.block-if.open.vba
#      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba
#       ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba keyword.operator.comparison.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                 ^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba
#                                   ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.open.vba
>        mLargestValueSize = valSize
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                         ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                            ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>    End If
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.close.vba
#       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba keyword.control.block-if.close.vba
>End Sub
#^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba storage.type.method.close.vba
>
>Private Sub MetaTrackingRemove(remVal As Variant)
#^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba storage.type.method.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba
#            ^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba entity.name.function.vba
#                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba
#                               ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba variable.parameter.vba
#                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba
#                                      ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                                         ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
#                                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba
>Attribute MetaTrackingRemove.VB_Description = "Tracks the largest sized value array when removing a key from the dictionary."
#^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba entity.name.function.vba
#                            ^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba support.variable.property.vba
#                                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba
#                                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba
#                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba string.quoted.double.vba
>'   Tracks the largest sized value array when removing a key from the dictionary.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'
#^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'   Args:
#^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'       remVal: The value being removed.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'
#^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'   Shortcut for when we have no values.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>    If Count = 0 Then
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba keyword.control.block-if.open.vba
#      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba
#       ^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba keyword.operator.comparison.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba constant.numeric.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba
#                 ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.open.vba
>        mLargestValueSize = 0
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                         ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba constant.numeric.vba
>    End If
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.close.vba
#       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba keyword.control.block-if.close.vba
>
>'   Get the count of the value array we're removing.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>    Dim removedValSize As Long
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#        ^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#                       ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba keyword.control.as.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#                          ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    removedValSize = GetValueOrArraySize(remVal)
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                  ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                     ^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                         ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>'   No need to test everything if the tracked value wasn't the largest.    
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>    If mLargestValueSize > removedValSize Then Exit Sub
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba
#       ^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba meta.expression.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba meta.expression.vba keyword.operator.comparison.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba meta.expression.vba
#                           ^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba
#                                          ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba
#                                               ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba keyword.control.flow.other.vba
>
>    Dim val As Variant
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#        ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#            ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba keyword.control.as.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#               ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
>    Dim valSize As Long
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#        ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#                ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba keyword.control.as.vba
#                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#                   ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    mLargestValueSize = 0
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                     ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba constant.numeric.vba
>    For Each val In Me.Items
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba keyword.control.flow.loop.vba
#             ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba
#                 ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba keyword.control.flow.loop.vba
#                    ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.variable-or-property.vba variable.language.me.vba
#                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.variable-or-property.vba punctuation.accessor.vba
#                       ^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.variable-or-property.vba variable.other.property
>        valSize = GetValueOrArraySize(val)
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba
#        ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#               ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                  ^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                      ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>'       Shortcut if next largest is the same as value we're untracking.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba comment.line.apostrophe.vba
>        If valSize = removedValSize Then
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba
#        ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba keyword.control.block-if.open.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba
#           ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba keyword.operator.comparison.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                     ^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba
#                                    ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.open.vba
>            mLargestValueSize = valSize
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                             ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>            Exit Sub
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.flow.other.vba
>        End If
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.close.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba keyword.control.block-if.close.vba
>
>        If valSize > mLargestValueSize Then
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba
#        ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba keyword.control.block-if.open.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba
#           ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba keyword.operator.comparison.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                     ^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba
#                                       ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.open.vba
>            mLargestValueSize = valSize
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                             ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>        End If
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.close.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.block-if-else.vba keyword.control.block-if.close.vba
>    Next val
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba
#    ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba
#         ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Sub
#^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba storage.type.method.close.vba
>
>Private Function GetValueOrArraySize(val As Variant) As Long
#^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba storage.type.method.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba
#                 ^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba entity.name.function.vba
#                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba
#                                     ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba variable.parameter.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba
#                                         ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                                            ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
#                                                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba
#                                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba
#                                                     ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.variables.type.vba
#                                                        ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.variables.type.vba support.type.primitive.Long.vba
>Attribute GetValueOrArraySize.VB_Description = "Returns the length of the array, 1 if not an array, and 0 if Nothing."
#^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba entity.name.function.vba
#                             ^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba support.variable.property.vba
#                                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba
#                                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba
#                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba string.quoted.double.vba
>'   Returns the length of the array, 1 if not an array, and 0 if Nothing.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'
#^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'   Args:
#^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'       val: The value or array to be tested.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'
#^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'   Returns:
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'       The count of values in an array, 1 if not an array, and 0 if Nothing.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'
#^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'   Type checking like this prevents an exception if not an object.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>    If TypeName(val) = "Nothing" Then Exit Function
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba
#       ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba meta.expression.vba
#                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba meta.expression.vba keyword.operator.comparison.vba
#                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba meta.expression.vba
#                       ^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba meta.expression.vba string.quoted.double.vba
#                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba
#                                 ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba
#                                      ^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.flow.inline-if.vba keyword.control.flow.other.vba
>
>    Dim dims As Long
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#        ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#             ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba keyword.control.as.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#                ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    dims = NArrayDimensions(val)
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#        ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#           ^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                            ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>    If dims = 0 Then
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba keyword.control.block-if.open.vba
#      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba
#       ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba keyword.operator.comparison.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba constant.numeric.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba
#                ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.open.vba
>'       Not an array and not nothing.    
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>        GetValueOrArraySize = 1
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                           ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba constant.numeric.vba
>    Else
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.else.vba
>'       Is an array, return the count.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'       Assumes a single dimension, but that's all we'll have here.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>        GetValueOrArraySize = UBound(val) + 1
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                           ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                     ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
#                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba
#                                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba
#                                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba constant.numeric.vba
>    End If
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.close.vba
#       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.block-if-else.vba keyword.control.block-if.close.vba
>End Function
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba storage.type.method.close.vba
>
>Private Function LongMin(a As Long, b As Long) As Long
#^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba storage.type.method.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba
#                 ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba entity.name.function.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba variable.parameter.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba
#                           ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                              ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
#                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba punctuation.separator.vba
#                                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba
#                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba variable.parameter.vba
#                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba
#                                      ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                                         ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
#                                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba
#                                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba
#                                               ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.variables.type.vba
#                                                  ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.signature.vba meta.variables.type.vba support.type.primitive.Long.vba
>Attribute LongMin.VB_Description = "Returns the smaller of the two passed in values."
#^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba
#          ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba entity.name.function.vba
#                 ^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba support.variable.property.vba
#                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba
#                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba
#                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba source.method.attribute.vba string.quoted.double.vba
>'   Returns the smaller of the two passed in values.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'
#^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'   Args:
#^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'       a: A value to be tested.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'       b: A value to be tested.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'
#^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'   Returns:
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'       a if a is smaller, else b.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>'
#^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba comment.line.apostrophe.vba
>    LongMin = Iif(a < b, a, b)
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#    ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#           ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#              ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.comparison.vba
#                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>End Function
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba storage.type.method.close.vba
>