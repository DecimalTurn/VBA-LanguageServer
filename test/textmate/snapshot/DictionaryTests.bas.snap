>Attribute VB_Name = "DictionaryTests"
#^^^^^^^^^ source.vba meta.attribute.vba keyword.attribute.vba
#         ^ source.vba meta.attribute.vba
#          ^^^^^^^ source.vba meta.attribute.vba support.variable.property.vba
#                 ^ source.vba meta.attribute.vba
#                  ^ source.vba meta.attribute.vba keyword.operator.assignment.vba
#                   ^ source.vba meta.attribute.vba
#                    ^^^^^^^^^^^^^^^^^ source.vba meta.attribute.vba string.quoted.double.vba
>' Copyright 2023 Sam Vanderslink
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' 
#^^ source.vba comment.line.apostrophe.vba
>' Permission is hereby granted, free of charge, to any person obtaining a copy 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' of this software and associated documentation files (the "Software"), to deal 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' in the Software without restriction, including without limitation the rights 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' copies of the Software, and to permit persons to whom the Software is 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' furnished to do so, subject to the following conditions:
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' 
#^^ source.vba comment.line.apostrophe.vba
>' The above copyright notice and this permission notice shall be included in 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' all copies or substantial portions of the Software.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' 
#^^ source.vba comment.line.apostrophe.vba
>' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>' IN THE SOFTWARE.
#^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>
>Option Explicit
#^^^^^^^^^^^^^^^ source.vba keyword.control.vba
>
>Enum CompareModeType
#^^^^ source.vba meta.enum.declaration.vba storage.type.enum.vba
#    ^ source.vba meta.enum.declaration.vba
#     ^^^^^^^^^^^^^^^ source.vba meta.enum.declaration.vba entity.name.type.enum.vba
>'   Performs a comparison by using the setting of the Option Compare statement.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.enum.declaration.vba comment.line.apostrophe.vba
>    vbUseCompareOption = -1
#^^^^ source.vba meta.enum.declaration.vba
#    ^^^^^^^^^^^^^^^^^^ source.vba meta.enum.declaration.vba variable.other.enummember.vba
#                      ^ source.vba meta.enum.declaration.vba
#                       ^ source.vba meta.enum.declaration.vba keyword.operator.assignment.vba
#                        ^ source.vba meta.enum.declaration.vba
#                         ^^ source.vba meta.enum.declaration.vba constant.numeric.vba
>
>'   Performs a binary comparison.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.enum.declaration.vba comment.line.apostrophe.vba
>    vbBinaryCompare = 0
#^^^^ source.vba meta.enum.declaration.vba
#    ^^^^^^^^^^^^^^^ source.vba meta.enum.declaration.vba variable.other.enummember.vba
#                   ^ source.vba meta.enum.declaration.vba
#                    ^ source.vba meta.enum.declaration.vba keyword.operator.assignment.vba
#                     ^ source.vba meta.enum.declaration.vba
#                      ^ source.vba meta.enum.declaration.vba constant.numeric.vba
>
>'   Performs a textual comparison.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.enum.declaration.vba comment.line.apostrophe.vba
>    vbTextCompare = 1
#^^^^ source.vba meta.enum.declaration.vba
#    ^^^^^^^^^^^^^ source.vba meta.enum.declaration.vba variable.other.enummember.vba
#                 ^ source.vba meta.enum.declaration.vba
#                  ^ source.vba meta.enum.declaration.vba keyword.operator.assignment.vba
#                   ^ source.vba meta.enum.declaration.vba
#                    ^ source.vba meta.enum.declaration.vba constant.numeric.vba
>
>'   Microsoft Access only.
#^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.enum.declaration.vba comment.line.apostrophe.vba
>'   Performs a comparison based on information in your database.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.enum.declaration.vba comment.line.apostrophe.vba
>    vbDatabaseCompare = 2
#^^^^ source.vba meta.enum.declaration.vba
#    ^^^^^^^^^^^^^^^^^ source.vba meta.enum.declaration.vba variable.other.enummember.vba
#                     ^ source.vba meta.enum.declaration.vba
#                      ^ source.vba meta.enum.declaration.vba keyword.operator.assignment.vba
#                       ^ source.vba meta.enum.declaration.vba
#                        ^ source.vba meta.enum.declaration.vba constant.numeric.vba
>End Enum
#^^^^^^^^ source.vba meta.enum.declaration.vba storage.type.enum.vba
>
>Public Type MyFooType 'Comment
#^^^^^^^^^^^ source.vba meta.struct.declaration.vba storage.type.struct.vba
#           ^ source.vba meta.struct.declaration.vba
#            ^^^^^^^^^ source.vba meta.struct.declaration.vba entity.name.type.struct.vba
#                     ^^^^^^^^^ source.vba meta.struct.declaration.vba comment.line.apostrophe.vba
> 'Comment
#^^^^^^^^^ source.vba meta.struct.declaration.vba comment.line.apostrophe.vba
>    Length As Long 'Comment
#^^^^ source.vba meta.struct.declaration.vba
#    ^^^^^^ source.vba meta.struct.declaration.vba variable.other.readwrite.vba
#          ^ source.vba meta.struct.declaration.vba
#           ^^ source.vba meta.struct.declaration.vba meta.variables.type.vba keyword.control.as.vba
#             ^ source.vba meta.struct.declaration.vba meta.variables.type.vba
#              ^^^^ source.vba meta.struct.declaration.vba meta.variables.type.vba support.type.primitive.Long.vba
#                  ^^^^^^^^^ source.vba meta.struct.declaration.vba comment.line.apostrophe.vba
>     'Comment
#^^^^^^^^^^^^^ source.vba meta.struct.declaration.vba comment.line.apostrophe.vba
>
>    Length As Long 'Comment
#^^^^ source.vba meta.struct.declaration.vba
#    ^^^^^^ source.vba meta.struct.declaration.vba variable.other.readwrite.vba
#          ^ source.vba meta.struct.declaration.vba
#           ^^ source.vba meta.struct.declaration.vba meta.variables.type.vba keyword.control.as.vba
#             ^ source.vba meta.struct.declaration.vba meta.variables.type.vba
#              ^^^^ source.vba meta.struct.declaration.vba meta.variables.type.vba support.type.primitive.Long.vba
#                  ^^^^^^^^^ source.vba meta.struct.declaration.vba comment.line.apostrophe.vba
>     'Comment
#^^^^^^^^^^^^^ source.vba meta.struct.declaration.vba comment.line.apostrophe.vba
>End Type 'Comment
#^^^^^^^^ source.vba meta.struct.declaration.vba storage.type.struct.vba
#        ^^^^^^^^^ source.vba meta.struct.declaration.vba comment.line.apostrophe.vba
>
>
>Private passTests As New Collection
#^^^^^^^ source.vba meta.declare.Private.vba storage.modifier.visibility.vba
#       ^ source.vba meta.declare.Private.vba
#        ^^^^^^^^^ source.vba meta.declare.Private.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                 ^ source.vba meta.declare.Private.vba
#                  ^^ source.vba meta.declare.Private.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.Private.vba
#                     ^^^ source.vba meta.declare.Private.vba keyword.operator.new.vba
#                        ^ source.vba meta.declare.Private.vba
#                         ^^^^^^^^^^ source.vba meta.declare.Private.vba meta.argument-signature.type.vba support.type.object.Collection.vba
>Private failTests As New Collection
#^^^^^^^ source.vba meta.declare.Private.vba storage.modifier.visibility.vba
#       ^ source.vba meta.declare.Private.vba
#        ^^^^^^^^^ source.vba meta.declare.Private.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                 ^ source.vba meta.declare.Private.vba
#                  ^^ source.vba meta.declare.Private.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.Private.vba
#                     ^^^ source.vba meta.declare.Private.vba keyword.operator.new.vba
#                        ^ source.vba meta.declare.Private.vba
#                         ^^^^^^^^^^ source.vba meta.declare.Private.vba meta.argument-signature.type.vba support.type.object.Collection.vba
>
>Public Sub RunTests()
#^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#          ^ source.vba source.method.signature.vba
#           ^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                   ^ source.vba source.method.signature.vba
#                    ^ source.vba source.method.signature.vba
>Attribute RunTests.VB_Description = "Runs all tests."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                  ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                 ^ source.vba source.method.attribute.vba
#                                  ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                   ^ source.vba source.method.attribute.vba
#                                    ^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Runs all tests.
#^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>    Set passTests = New Collection
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                 ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                    ^^^ source.vba meta.variable-assignment.vba meta.expression.vba keyword.operator.new.vba
#                       ^ source.vba meta.variable-assignment.vba meta.expression.vba
#                        ^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>    Set failTests = New Collection
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                 ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                    ^^^ source.vba meta.variable-assignment.vba meta.expression.vba keyword.operator.new.vba
#                       ^ source.vba meta.variable-assignment.vba meta.expression.vba
#                        ^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>    Dim testName As Variant
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                ^ source.vba meta.declare.variable.vba
#                 ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                   ^ source.vba meta.declare.variable.vba
#                    ^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
>    For Each testName In GetTestNames()
#^^^^ source.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^^^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba keyword.control.flow.loop.vba
#             ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                     ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba
#                      ^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba keyword.control.flow.loop.vba
#                         ^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.function.call.vba entity.name.function.call.vba
#                                     ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.function.call.vba meta.arguments.vba
#                                      ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.function.call.vba
>        RunTest CStr(testName)
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba
#        ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.sub-call.vba entity.name.function.call.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.sub-call.vba meta.arguments.vba
#                ^^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                     ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
>    Next testName
#^^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba
#         ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>    Dim p As Long, f As Long
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
#                 ^ source.vba meta.declare.variable.vba punctuation.separator.vba
#                  ^ source.vba meta.declare.variable.vba
#                   ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                    ^ source.vba meta.declare.variable.vba
#                     ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                       ^ source.vba meta.declare.variable.vba
#                        ^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    p = passTests.Count
#^^^^ source.vba
#    ^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#        ^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                 ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba punctuation.accessor.vba
#                  ^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba support.variable.property.vba
>    f = failTests.Count
#^^^^ source.vba
#    ^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#        ^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                 ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba punctuation.accessor.vba
#                  ^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba support.variable.property.vba
>
>    Debug.Print "-------------------------------------------"
#^^^^ source.vba
#    ^^^^^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#          ^^^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#               ^ source.vba meta.sub-call.vba meta.arguments.vba
#                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
>    Debug.Print "   Passed: " & p & " (" & Format(p / (p + f), "0.00%)")
#^^^^ source.vba
#    ^^^^^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#          ^^^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#               ^ source.vba meta.sub-call.vba meta.arguments.vba
#                ^^^^^^^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
#                             ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba
#                              ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba keyword.operator.arithmetic.vba
#                               ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba
#                                ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                 ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba
#                                  ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                   ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba
#                                    ^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
#                                        ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba
#                                         ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                          ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba
#                                           ^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                                 ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                  ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                   ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                                    ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                                     ^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                                       ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                        ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                                         ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                                          ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                                           ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                            ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                                             ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                                                              ^ source.vba meta.sub-call.vba meta.arguments.vba
#                                                               ^^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
#                                                                       ^ source.vba meta.sub-call.vba
>    Debug.Print "   Failed: " & f & " (" & Format(f / (p + f), "0.00%)")
#^^^^ source.vba
#    ^^^^^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#          ^^^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#               ^ source.vba meta.sub-call.vba meta.arguments.vba
#                ^^^^^^^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
#                             ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba
#                              ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba keyword.operator.arithmetic.vba
#                               ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba
#                                ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                 ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba
#                                  ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                   ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba
#                                    ^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
#                                        ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba
#                                         ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                          ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba
#                                           ^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                                 ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                  ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                   ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                                    ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                                     ^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                                       ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                        ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                                         ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                                          ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                                           ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                            ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                                             ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                                                              ^ source.vba meta.sub-call.vba meta.arguments.vba
#                                                               ^^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
#                                                                       ^ source.vba meta.sub-call.vba
>    Debug.Print "-------------------------------------------"
#^^^^ source.vba
#    ^^^^^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#          ^^^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#               ^ source.vba meta.sub-call.vba meta.arguments.vba
#                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
>
>End Sub
#^^^^^^^ source.vba storage.type.method.close.vba
>
>Sub RunSingle()
#^^^ source.vba source.method.signature.vba storage.type.method.vba
#   ^ source.vba source.method.signature.vba
#    ^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#             ^ source.vba source.method.signature.vba
#              ^ source.vba source.method.signature.vba
>    Dim tr As TestResult
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^ source.vba meta.declare.variable.vba
#           ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#             ^ source.vba meta.declare.variable.vba
#              ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.TestResult.vba
>    Set tr = TestDictionary_AddKeyOnly()
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#             ^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                      ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                       ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>    tr.Name = "TestDictionary_AddKeyOnly"
#^^^^ source.vba
#    ^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#      ^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba punctuation.accessor.vba
#       ^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba support.variable.property.vba
#           ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Debug.Print tr.ToString
#^^^^ source.vba
#    ^^^^^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#          ^^^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#               ^ source.vba meta.sub-call.vba meta.arguments.vba
#                ^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                  ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba punctuation.accessor.vba
#                   ^^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba support.variable.property.vba
>End Sub
#^^^^^^^ source.vba storage.type.method.close.vba
>
>Private Sub RunTest(testName As String)
#^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#           ^ source.vba source.method.signature.vba
#            ^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                   ^ source.vba source.method.signature.vba
#                    ^^^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba variable.parameter.vba
#                            ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba
#                             ^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba keyword.control.as.vba
#                               ^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba
#                                ^^^^^^ source.vba source.method.signature.vba meta.arguments.signature.vba meta.argument-signature.param.vba meta.argument-signature.as.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                                      ^ source.vba source.method.signature.vba
>Attribute RunTest.VB_Description = "Runs the named test and stores the result."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                 ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                ^ source.vba source.method.attribute.vba
#                                 ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                  ^ source.vba source.method.attribute.vba
#                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Runs the named test and stores the result.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>'   Args:
#^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'       testName: The name of the function returning a TestResult.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>    Dim tr As TestResult
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^ source.vba meta.declare.variable.vba
#           ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#             ^ source.vba meta.declare.variable.vba
#              ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.TestResult.vba
>    Set tr = Application.Run(testName)
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#             ^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                        ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                         ^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                            ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                             ^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                     ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>    tr.Name = testName
#^^^^ source.vba
#    ^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#      ^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba punctuation.accessor.vba
#       ^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba support.variable.property.vba
#           ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#              ^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>    Debug.Print tr.ToString
#^^^^ source.vba
#    ^^^^^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#          ^^^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#               ^ source.vba meta.sub-call.vba meta.arguments.vba
#                ^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                  ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba punctuation.accessor.vba
#                   ^^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba support.variable.property.vba
>
>    If tr.Failed Then failTests.Add tr Else passTests.Add tr
#^^^^ source.vba meta.flow.inline-if-else.vba
#    ^^ source.vba meta.flow.inline-if-else.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if-else.vba
#       ^^ source.vba meta.flow.inline-if-else.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if-else.vba meta.expression.vba meta.variable-or-property.vba punctuation.accessor.vba
#          ^^^^^^ source.vba meta.flow.inline-if-else.vba meta.expression.vba meta.variable-or-property.vba support.variable.property.vba
#                ^ source.vba meta.flow.inline-if-else.vba
#                 ^^^^ source.vba meta.flow.inline-if-else.vba keyword.control.flow.decision.vba
#                     ^ source.vba meta.flow.inline-if-else.vba
#                      ^^^^^^^^^ source.vba meta.flow.inline-if-else.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                               ^ source.vba meta.flow.inline-if-else.vba meta.sub-call.vba punctuation.accessor.vba
#                                ^^^ source.vba meta.flow.inline-if-else.vba meta.sub-call.vba entity.name.function.call.vba
#                                   ^ source.vba meta.flow.inline-if-else.vba meta.sub-call.vba meta.arguments.vba
#                                    ^^ source.vba meta.flow.inline-if-else.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                      ^ source.vba meta.flow.inline-if-else.vba
#                                       ^^^^ source.vba meta.flow.inline-if-else.vba keyword.control.flow.decision.vba
#                                           ^ source.vba meta.flow.inline-if-else.vba
#                                            ^^^^^^^^^ source.vba meta.flow.inline-if-else.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                     ^ source.vba meta.flow.inline-if-else.vba meta.sub-call.vba punctuation.accessor.vba
#                                                      ^^^ source.vba meta.flow.inline-if-else.vba meta.sub-call.vba entity.name.function.call.vba
#                                                         ^ source.vba meta.flow.inline-if-else.vba meta.sub-call.vba meta.arguments.vba
#                                                          ^^ source.vba meta.flow.inline-if-else.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Sub
#^^^^^^^ source.vba storage.type.method.close.vba
>
>Private Function GetTestNames() As Collection
#^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                ^ source.vba source.method.signature.vba
#                 ^^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                             ^ source.vba source.method.signature.vba
#                              ^ source.vba source.method.signature.vba
#                               ^ source.vba source.method.signature.vba
#                                ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                  ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                   ^^^^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.object.Collection.vba
>Attribute GetTestNames.VB_Description = "Gets the test names from this module."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                      ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                     ^ source.vba source.method.attribute.vba
#                                      ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                       ^ source.vba source.method.attribute.vba
#                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Gets the test names from this module.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'   A valid test starts with Private Function TestDictionary_ and takes no args.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>'   Returns:
#^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'       A collection of strings representing names of tests.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>    Const MODULENAME As String = "DictionaryTests"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                    ^ source.vba meta.declare.constant.vba
#                     ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                       ^ source.vba meta.declare.constant.vba
#                        ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                              ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                 ^^^^^^^^^^^^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const FUNCTIONID As String = "Private Function "
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                    ^ source.vba meta.declare.constant.vba
#                     ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                       ^ source.vba meta.declare.constant.vba
#                        ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                              ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                 ^^^^^^^^^^^^^^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const TESTSTARTW As String = "Private Function TestDictionary_"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                    ^ source.vba meta.declare.constant.vba
#                     ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                       ^ source.vba meta.declare.constant.vba
#                        ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                              ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>
>    Dim tswLen As Long
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#              ^ source.vba meta.declare.variable.vba
#               ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    tswLen = Len(TESTSTARTW)
#^^^^ source.vba
#    ^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#             ^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                 ^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                           ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>    Dim codeMod As Object
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#               ^ source.vba meta.declare.variable.vba
#                ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                  ^ source.vba meta.declare.variable.vba
#                   ^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.Object.vba
>    Set codeMod = ThisWorkbook.VBProject.VBComponents(MODULENAME).CodeModule
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#               ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                  ^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                              ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                               ^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba support.variable.property.vba
#                                        ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                                         ^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                                     ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                      ^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                                                ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
#                                                                 ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba punctuation.accessor.vba
#                                                                  ^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>    Dim i As Long
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    Dim results As New Collection
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#               ^ source.vba meta.declare.variable.vba
#                ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                  ^ source.vba meta.declare.variable.vba
#                   ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                      ^ source.vba meta.declare.variable.vba
#                       ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.Collection.vba
>    For i = 1 To codeMod.CountOfLines
#^^^^ source.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                 ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-or-property.vba punctuation.accessor.vba
#                         ^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-or-property.vba support.variable.property.vba
>        Dim lineContent As String
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba storage.type.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#            ^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#                        ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba keyword.control.as.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#                           ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.String.vba
>        lineContent = codeMod.Lines(i, 1)
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                   ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                      ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                              ^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>        If Left(lineContent, tswLen) = TESTSTARTW Then
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba keyword.control.block-if.open.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba
#           ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                ^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                             ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba
#                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba keyword.operator.comparison.vba
#                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                                       ^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba
#                                                  ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.open.vba
>            Dim funcName As String
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba storage.type.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#                ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#                         ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba keyword.control.as.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba
#                            ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.String.vba
>            funcName = Split(Split(lineContent, FUNCTIONID)(1), "(")(0)
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                    ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                       ^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                             ^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                   ^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                ^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
#                                                              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                                                                ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba string.quoted.double.vba
#                                                                   ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                                                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba constant.numeric.vba
#                                                                      ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
>            results.Add funcName
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.sub-call.vba punctuation.accessor.vba
#                    ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.sub-call.vba entity.name.function.call.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.sub-call.vba meta.arguments.vba
#                        ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>        End If
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#        ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.close.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba keyword.control.block-if.close.vba
>    Next i
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba
#         ^ source.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>    Set GetTestNames = results
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                    ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                       ^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Function
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Private Function TestDictionary_Add() As TestResult
#^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                ^ source.vba source.method.signature.vba
#                 ^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                                   ^ source.vba source.method.signature.vba
#                                    ^ source.vba source.method.signature.vba
#                                     ^ source.vba source.method.signature.vba
#                                      ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                        ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                         ^^^^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.object.TestResult.vba
>Attribute TestDictionary_Add.VB_Description = "Add an item to the dictionary."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                            ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                           ^ source.vba source.method.attribute.vba
#                                            ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                             ^ source.vba source.method.attribute.vba
#                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Add an item to the dictionary.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim tr As New TestResult
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^ source.vba meta.declare.variable.vba
#           ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#             ^ source.vba meta.declare.variable.vba
#              ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.TestResult.vba
>
>'   Arrange
#^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Const ADDKEY As String = "K"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                ^ source.vba meta.declare.constant.vba
#                 ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                   ^ source.vba meta.declare.constant.vba
#                    ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                          ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                             ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const ADDVAL As String = "V"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                ^ source.vba meta.declare.constant.vba
#                 ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                   ^ source.vba meta.declare.constant.vba
#                    ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                          ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                             ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Dim d As New Dictionary
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                ^ source.vba meta.declare.variable.vba
#                 ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.Dictionary.vba
>
>'   Act
#^^^^^^^ source.vba comment.line.apostrophe.vba
>    On Error Resume Next
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
>    d.Add ADDKEY, ADDVAL
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#         ^ source.vba meta.sub-call.vba meta.arguments.vba
#          ^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                 ^ source.vba meta.sub-call.vba meta.arguments.vba
#                  ^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
>
>'   Assert
#^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    If tr.AssertNoException() Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                             ^ source.vba meta.flow.inline-if.vba
#                              ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                  ^ source.vba meta.flow.inline-if.vba
#                                   ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                       ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                        ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    On Error GoTo 0
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#                 ^ source.vba meta.onErrorStatement.vba
#                  ^ source.vba meta.onErrorStatement.vba constant.numeric.vba
>
>    If tr.AssertAreEqual(1, d.Count) Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                             ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba punctuation.accessor.vba
#                              ^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba support.variable.property.vba
#                                   ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                    ^ source.vba meta.flow.inline-if.vba
#                                     ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                         ^ source.vba meta.flow.inline-if.vba
#                                          ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                              ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                               ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    If tr.AssertAreEqual(ADDVAL, d(ADDKEY)) Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                               ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                 ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                  ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                   ^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                           ^ source.vba meta.flow.inline-if.vba
#                                            ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                ^ source.vba meta.flow.inline-if.vba
#                                                 ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                     ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                      ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>
>Finally:
#^^^^^^^ source.vba variable.other.constant.label.vba
#       ^ source.vba
>    On Error GoTo 0
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#                 ^ source.vba meta.onErrorStatement.vba
#                  ^ source.vba meta.onErrorStatement.vba constant.numeric.vba
>    Set TestDictionary_Add = tr
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                          ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                             ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Function
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Private Function TestDictionary_AddKeyOnly() As TestResult
#^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                ^ source.vba source.method.signature.vba
#                 ^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                                          ^ source.vba source.method.signature.vba
#                                           ^ source.vba source.method.signature.vba
#                                            ^ source.vba source.method.signature.vba
#                                             ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                               ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                                ^^^^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.object.TestResult.vba
>Attribute TestDictionary_AddKeyOnly.VB_Description = "Adding a key with no value to the dictionary."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                                   ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                                  ^ source.vba source.method.attribute.vba
#                                                   ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                                    ^ source.vba source.method.attribute.vba
#                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Adding a key with no value to the dictionary.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim tr As New TestResult
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^ source.vba meta.declare.variable.vba
#           ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#             ^ source.vba meta.declare.variable.vba
#              ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.TestResult.vba
>
>'   Arrange
#^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Const ADDKEY As String = "K"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                ^ source.vba meta.declare.constant.vba
#                 ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                   ^ source.vba meta.declare.constant.vba
#                    ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                          ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                             ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Dim d As New Dictionary
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                ^ source.vba meta.declare.variable.vba
#                 ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.Dictionary.vba
>
>'   Act
#^^^^^^^ source.vba comment.line.apostrophe.vba
>    On Error Resume Next
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
>    d.Add ADDKEY
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#         ^ source.vba meta.sub-call.vba meta.arguments.vba
#          ^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
>
>'   Assert
#^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    If tr.AssertNoException() Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                             ^ source.vba meta.flow.inline-if.vba
#                              ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                  ^ source.vba meta.flow.inline-if.vba
#                                   ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                       ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                        ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    On Error GoTo 0
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#                 ^ source.vba meta.onErrorStatement.vba
#                  ^ source.vba meta.onErrorStatement.vba constant.numeric.vba
>
>    If tr.AssertAreEqual(1, d.Count) Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                             ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba punctuation.accessor.vba
#                              ^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba support.variable.property.vba
#                                   ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                    ^ source.vba meta.flow.inline-if.vba
#                                     ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                         ^ source.vba meta.flow.inline-if.vba
#                                          ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                              ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                               ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    If tr.AssertIsTrue(d.Exists(ADDKEY), "Key exists") Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                      ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                       ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                         ^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                               ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                ^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                      ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                       ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                         ^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
#                                                     ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                      ^ source.vba meta.flow.inline-if.vba
#                                                       ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                           ^ source.vba meta.flow.inline-if.vba
#                                                            ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                                ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                                 ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    If tr.AssertAreEqual(Nothing, d(ADDKEY)) Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.language.null.vba
#                                ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                 ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                  ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                   ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                    ^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                            ^ source.vba meta.flow.inline-if.vba
#                                             ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                 ^ source.vba meta.flow.inline-if.vba
#                                                  ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                      ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                       ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>
>Finally:
#^^^^^^^ source.vba variable.other.constant.label.vba
#       ^ source.vba
>    On Error GoTo 0
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#                 ^ source.vba meta.onErrorStatement.vba
#                  ^ source.vba meta.onErrorStatement.vba constant.numeric.vba
>    Set TestDictionary_AddKeyOnly = tr
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                 ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                    ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Function
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Private Function TestDictionary_AddBulkColMode() As TestResult
#^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                ^ source.vba source.method.signature.vba
#                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                                              ^ source.vba source.method.signature.vba
#                                               ^ source.vba source.method.signature.vba
#                                                ^ source.vba source.method.signature.vba
#                                                 ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                                   ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                                    ^^^^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.object.TestResult.vba
>Attribute TestDictionary_AddBulkColMode.VB_Description = "Add bulk items to the dictionary."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                                       ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                                      ^ source.vba source.method.attribute.vba
#                                                       ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                                        ^ source.vba source.method.attribute.vba
#                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Add bulk items to the dictionary.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim tr As New TestResult
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^ source.vba meta.declare.variable.vba
#           ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#             ^ source.vba meta.declare.variable.vba
#              ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.TestResult.vba
>
>'   Arrange
#^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim bulkData() As Variant
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                 ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                  ^ source.vba meta.declare.variable.vba
#                   ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                     ^ source.vba meta.declare.variable.vba
#                      ^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
>    ReDim bulkData(1 To 3, 1 To 4)
#^^^^ source.vba
#    ^^^^^ source.vba keyword.array.vba
#         ^ source.vba
#          ^^^^^^^^ source.vba meta.function.call.vba entity.name.function.call.vba
#                  ^ source.vba meta.function.call.vba meta.arguments.vba
#                   ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                    ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                     ^^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.range.vba
#                       ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                        ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                         ^ source.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                          ^ source.vba meta.function.call.vba meta.arguments.vba
#                           ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                            ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                             ^^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.range.vba
#                               ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                 ^ source.vba meta.function.call.vba
>
>    Const HDRS As String = "ABC"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#              ^ source.vba meta.declare.constant.vba
#               ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                 ^ source.vba meta.declare.constant.vba
#                  ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                        ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                           ^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const VALS As String = " 123"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#              ^ source.vba meta.declare.constant.vba
#               ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                 ^ source.vba meta.declare.constant.vba
#                  ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                        ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                           ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>
>    Dim i As Long
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    For i = 1 To UBound(bulkData, 1)
#^^^^ source.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                 ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                        ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba constant.numeric.vba
#                                   ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
>        Dim j As Long
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba storage.type.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba keyword.control.as.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#                 ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>        For j = 1 To UBound(bulkData, 2)
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#                  ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                     ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                            ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                    ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba constant.numeric.vba
#                                       ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
>            If j = 1 Then
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#            ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba keyword.control.block-if.open.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba keyword.operator.comparison.vba
#                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba constant.numeric.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba
#                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.open.vba
>                bulkData(i, j) = Mid(HDRS, i, 1)
#^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba
#                              ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                 ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>            Else
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.else.vba
>                bulkData(i, j) = Mid(HDRS, i, 1) & Mid(VALS, j, 1)
#^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba
#                              ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                 ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
#                                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba
#                                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba
#                                                   ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                       ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>            End If
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.close.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba keyword.control.block-if.close.vba
>        Next j
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>    Next i
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba
#         ^ source.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>    Dim d As New Dictionary
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                ^ source.vba meta.declare.variable.vba
#                 ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.Dictionary.vba
>
>'   Act
#^^^^^^^ source.vba comment.line.apostrophe.vba
>    On Error Resume Next
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
>    d.AddBulk bulkData
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^^^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#             ^ source.vba meta.sub-call.vba meta.arguments.vba
#              ^^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>'   Assert
#^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    If tr.AssertNoException() Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                             ^ source.vba meta.flow.inline-if.vba
#                              ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                  ^ source.vba meta.flow.inline-if.vba
#                                   ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                       ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                        ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    On Error GoTo 0
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#                 ^ source.vba meta.onErrorStatement.vba
#                  ^ source.vba meta.onErrorStatement.vba constant.numeric.vba
>
>    If tr.AssertAreEqual(Len(HDRS), d.Count) Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                             ^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                 ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                  ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                   ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                    ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                     ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba punctuation.accessor.vba
#                                      ^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba support.variable.property.vba
#                                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                            ^ source.vba meta.flow.inline-if.vba
#                                             ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                 ^ source.vba meta.flow.inline-if.vba
#                                                  ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                      ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                       ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>
>    For i = 1 To UBound(bulkData, 1)
#^^^^ source.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                 ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                        ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba constant.numeric.vba
#                                   ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
>        For j = 2 To UBound(bulkData, 2)
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#                  ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                     ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                            ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                    ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba constant.numeric.vba
#                                       ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
>            If d(bulkData(i, 1))(j - 2) <> bulkData(i, j) Then
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#            ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba keyword.control.block-if.open.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                 ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba
#                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba constant.numeric.vba
#                                      ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba keyword.operator.comparison.vba
#                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba keyword.operator.comparison.vba
#                                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                                           ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba
#                                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba
#                                                          ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.open.vba
>                tr.Failed = True
#^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba punctuation.accessor.vba
#                   ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba support.variable.property.vba
#                         ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                            ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba constant.language.boolean.vba
>                tr.Message = "Dictionary data failed validation."
#^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba punctuation.accessor.vba
#                   ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba support.variable.property.vba
#                          ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>            End If
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.close.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba keyword.control.block-if.close.vba
>        Next j
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>    Next i
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba
#         ^ source.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>Finally:
#^^^^^^^ source.vba variable.other.constant.label.vba
#       ^ source.vba
>    On Error GoTo 0
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#                 ^ source.vba meta.onErrorStatement.vba
#                  ^ source.vba meta.onErrorStatement.vba constant.numeric.vba
>    Set TestDictionary_AddBulkColMode = tr
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                     ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                        ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Function
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Private Function TestDictionary_AddBulkRowMode() As TestResult
#^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                ^ source.vba source.method.signature.vba
#                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                                              ^ source.vba source.method.signature.vba
#                                               ^ source.vba source.method.signature.vba
#                                                ^ source.vba source.method.signature.vba
#                                                 ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                                   ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                                    ^^^^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.object.TestResult.vba
>Attribute TestDictionary_AddBulkRowMode.VB_Description = "Add bulk items to the dictionary."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                                       ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                                      ^ source.vba source.method.attribute.vba
#                                                       ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                                        ^ source.vba source.method.attribute.vba
#                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Add bulk items to the dictionary.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim tr As New TestResult
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^ source.vba meta.declare.variable.vba
#           ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#             ^ source.vba meta.declare.variable.vba
#              ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.TestResult.vba
>
>'   Arrange
#^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim bulkData() As Variant
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                 ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                  ^ source.vba meta.declare.variable.vba
#                   ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                     ^ source.vba meta.declare.variable.vba
#                      ^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
>    ReDim bulkData(1 To 3, 1 To 4)
#^^^^ source.vba
#    ^^^^^ source.vba keyword.array.vba
#         ^ source.vba
#          ^^^^^^^^ source.vba meta.function.call.vba entity.name.function.call.vba
#                  ^ source.vba meta.function.call.vba meta.arguments.vba
#                   ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                    ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                     ^^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.range.vba
#                       ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                        ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                         ^ source.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                          ^ source.vba meta.function.call.vba meta.arguments.vba
#                           ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                            ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                             ^^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.range.vba
#                               ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                 ^ source.vba meta.function.call.vba
>
>    Const HDRS As String = "ABC"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#              ^ source.vba meta.declare.constant.vba
#               ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                 ^ source.vba meta.declare.constant.vba
#                  ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                        ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                           ^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const VALS As String = " 123"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#              ^ source.vba meta.declare.constant.vba
#               ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                 ^ source.vba meta.declare.constant.vba
#                  ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                        ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                           ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>
>    Dim i As Long
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    For i = 1 To UBound(bulkData, 1)
#^^^^ source.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                 ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                        ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba constant.numeric.vba
#                                   ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
>        Dim j As Long
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba storage.type.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba keyword.control.as.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#                 ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>        For j = 1 To UBound(bulkData, 2)
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#                  ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                     ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                            ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                    ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba constant.numeric.vba
#                                       ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
>            If j = 1 Then
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#            ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba keyword.control.block-if.open.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba keyword.operator.comparison.vba
#                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba constant.numeric.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba
#                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.open.vba
>                bulkData(i, j) = Mid(HDRS, i, 1)
#^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba
#                              ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                 ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>            Else
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.else.vba
>                bulkData(i, j) = Mid(HDRS, i, 1) & Mid(VALS, j, 1)
#^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba
#                              ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                 ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
#                                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba
#                                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba
#                                                   ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                       ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>            End If
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.close.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba keyword.control.block-if.close.vba
>        Next j
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>    Next i
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba
#         ^ source.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>    Dim d As New Dictionary
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                ^ source.vba meta.declare.variable.vba
#                 ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.Dictionary.vba
>
>'   Act
#^^^^^^^ source.vba comment.line.apostrophe.vba
>    On Error Resume Next
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
>    d.AddBulk Application.Transpose(bulkData), OptionUseRowMode:=True
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^^^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#             ^ source.vba meta.sub-call.vba meta.arguments.vba
#              ^^^^^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                         ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                          ^^^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                   ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                    ^^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                            ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                             ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                                              ^ source.vba meta.sub-call.vba meta.arguments.vba
#                                               ^^^^^^^^^^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.arg-name.vba variable.parameter.name.vba
#                                                               ^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.arg-name.vba punctuation.assignment.parameter.vba
#                                                                 ^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba constant.language.boolean.vba
>
>'   Assert
#^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    If tr.AssertNoException() Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                             ^ source.vba meta.flow.inline-if.vba
#                              ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                  ^ source.vba meta.flow.inline-if.vba
#                                   ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                       ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                        ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    On Error GoTo 0
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#                 ^ source.vba meta.onErrorStatement.vba
#                  ^ source.vba meta.onErrorStatement.vba constant.numeric.vba
>
>    If tr.AssertAreEqual(Len(HDRS), d.Count, "count headers") Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                             ^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                 ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                  ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                   ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                    ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                     ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba punctuation.accessor.vba
#                                      ^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba support.variable.property.vba
#                                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                             ^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
#                                                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                             ^ source.vba meta.flow.inline-if.vba
#                                                              ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                                  ^ source.vba meta.flow.inline-if.vba
#                                                                   ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                                       ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                                        ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>
>    For i = 1 To UBound(bulkData, 1)
#^^^^ source.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                 ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                        ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba constant.numeric.vba
#                                   ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
>        For j = 2 To UBound(bulkData, 2)
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#                  ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                     ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                            ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                    ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba constant.numeric.vba
#                                       ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
>            If d(bulkData(i, 1))(j - 2) <> bulkData(i, j) Then
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#            ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba keyword.control.block-if.open.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                 ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba
#                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba constant.numeric.vba
#                                      ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba keyword.operator.comparison.vba
#                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba keyword.operator.comparison.vba
#                                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                                           ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba
#                                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba
#                                                          ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.open.vba
>                tr.Failed = True
#^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba punctuation.accessor.vba
#                   ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba support.variable.property.vba
#                         ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                            ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba constant.language.boolean.vba
>                tr.Message = "Dictionary data failed validation."
#^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba punctuation.accessor.vba
#                   ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba support.variable.property.vba
#                          ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>            End If
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.close.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba keyword.control.block-if.close.vba
>        Next j
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>    Next i
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba
#         ^ source.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>Finally:
#^^^^^^^ source.vba variable.other.constant.label.vba
#       ^ source.vba
>    On Error GoTo 0
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#                 ^ source.vba meta.onErrorStatement.vba
#                  ^ source.vba meta.onErrorStatement.vba constant.numeric.vba
>    Set TestDictionary_AddBulkRowMode = tr
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                     ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                        ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Function
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Private Function TestDictionary_AddBulkCountKeys() As TestResult
#^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                ^ source.vba source.method.signature.vba
#                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                                                ^ source.vba source.method.signature.vba
#                                                 ^ source.vba source.method.signature.vba
#                                                  ^ source.vba source.method.signature.vba
#                                                   ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                                     ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                                      ^^^^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.object.TestResult.vba
>Attribute TestDictionary_AddBulkCountKeys.VB_Description = "Add bulk items to the dictionary."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                                         ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                                        ^ source.vba source.method.attribute.vba
#                                                         ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                                          ^ source.vba source.method.attribute.vba
#                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Add bulk items to the dictionary.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim tr As New TestResult
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^ source.vba meta.declare.variable.vba
#           ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#             ^ source.vba meta.declare.variable.vba
#              ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.TestResult.vba
>
>'   Arrange
#^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim bulkData() As Variant
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                 ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                  ^ source.vba meta.declare.variable.vba
#                   ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                     ^ source.vba meta.declare.variable.vba
#                      ^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
>    ReDim bulkData(1 To 6, 1 To 1)
#^^^^ source.vba
#    ^^^^^ source.vba keyword.array.vba
#         ^ source.vba
#          ^^^^^^^^ source.vba meta.function.call.vba entity.name.function.call.vba
#                  ^ source.vba meta.function.call.vba meta.arguments.vba
#                   ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                    ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                     ^^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.range.vba
#                       ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                        ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                         ^ source.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                          ^ source.vba meta.function.call.vba meta.arguments.vba
#                           ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                            ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                             ^^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.range.vba
#                               ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                 ^ source.vba meta.function.call.vba
>
>    Const HDRS As String = "ABC"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#              ^ source.vba meta.declare.constant.vba
#               ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                 ^ source.vba meta.declare.constant.vba
#                  ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                        ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                           ^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const VALS As String = "123"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#              ^ source.vba meta.declare.constant.vba
#               ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                 ^ source.vba meta.declare.constant.vba
#                  ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                        ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                           ^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>
>    Dim i As Long
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    For i = 1 To Len(HDRS)
#^^^^ source.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                 ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba
>        Dim j As Long
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba storage.type.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba keyword.control.as.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#                 ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>        For j = 1 To CLng(Mid(VALS, i, 1))
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#                  ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                          ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                              ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                  ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba entity.name.function.call.vba
#                                     ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#                                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba constant.numeric.vba
#                                        ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
>            Dim n As Long
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#            ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba storage.type.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#                  ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba keyword.control.as.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>            n = n + 1
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba
#                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba keyword.operator.arithmetic.vba
#                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba constant.numeric.vba
>            bulkData(n, 1) = Mid(HDRS, i, 1)
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#            ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba
#                          ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                             ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                 ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>        Next j
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>    Next i
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba
#         ^ source.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>    Dim d As New Dictionary
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                ^ source.vba meta.declare.variable.vba
#                 ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.Dictionary.vba
>
>'   Act
#^^^^^^^ source.vba comment.line.apostrophe.vba
>    On Error Resume Next
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
>    d.AddBulk bulkData, OptionCountKeys:=True
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^^^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#             ^ source.vba meta.sub-call.vba meta.arguments.vba
#              ^^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                      ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                       ^ source.vba meta.sub-call.vba meta.arguments.vba
#                        ^^^^^^^^^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.arg-name.vba variable.parameter.name.vba
#                                       ^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.arg-name.vba punctuation.assignment.parameter.vba
#                                         ^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba constant.language.boolean.vba
>
>'   Assert
#^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    If tr.AssertNoException() Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                             ^ source.vba meta.flow.inline-if.vba
#                              ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                  ^ source.vba meta.flow.inline-if.vba
#                                   ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                       ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                        ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    On Error GoTo 0
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#                 ^ source.vba meta.onErrorStatement.vba
#                  ^ source.vba meta.onErrorStatement.vba constant.numeric.vba
>
>    If tr.AssertAreEqual(Len(HDRS), d.Count, "count keys") Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                             ^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                 ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                  ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                   ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                    ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                     ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba punctuation.accessor.vba
#                                      ^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba support.variable.property.vba
#                                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                             ^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
#                                                         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                          ^ source.vba meta.flow.inline-if.vba
#                                                           ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                               ^ source.vba meta.flow.inline-if.vba
#                                                                ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                                    ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                                     ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>
>    For i = 1 To Len(HDRS)
#^^^^ source.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                 ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba
>        Dim h As String, v As Long
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba storage.type.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba keyword.control.as.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#                 ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba punctuation.separator.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#                           ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba keyword.control.as.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#                              ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>        h = Mid(HDRS, i, 1)
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#            ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>        v = CLng(Mid(VALS, i, 1))
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#            ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                 ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>        If tr.AssertAreEqual(v, d(h), h) Then Exit For
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba
#        ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba
#           ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#              ^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba
#                                         ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba
#                                              ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba keyword.control.flow.loop.vba
>    Next i
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba
#         ^ source.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>Finally:
#^^^^^^^ source.vba variable.other.constant.label.vba
#       ^ source.vba
>    Set TestDictionary_AddBulkCountKeys = tr
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                       ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                          ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Function
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Private Function TestDictionary_AddBulkCountKeysRowMode() As TestResult
#^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                ^ source.vba source.method.signature.vba
#                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                                                       ^ source.vba source.method.signature.vba
#                                                        ^ source.vba source.method.signature.vba
#                                                         ^ source.vba source.method.signature.vba
#                                                          ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                                            ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                                             ^^^^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.object.TestResult.vba
>Attribute TestDictionary_AddBulkCountKeysRowMode.VB_Description = "Github issue #4 Counting keys using row mode errors with duplicate key."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                                                ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                                               ^ source.vba source.method.attribute.vba
#                                                                ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                                                 ^ source.vba source.method.attribute.vba
#                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Github issue #4 Counting keys using row mode errors with duplicate key.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim tr As New TestResult
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^ source.vba meta.declare.variable.vba
#           ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#             ^ source.vba meta.declare.variable.vba
#              ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.TestResult.vba
>
>'   Arrange
#^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim bulkData() As Variant
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                 ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                  ^ source.vba meta.declare.variable.vba
#                   ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                     ^ source.vba meta.declare.variable.vba
#                      ^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
>    ReDim bulkData(1 To 6, 1 To 1)
#^^^^ source.vba
#    ^^^^^ source.vba keyword.array.vba
#         ^ source.vba
#          ^^^^^^^^ source.vba meta.function.call.vba entity.name.function.call.vba
#                  ^ source.vba meta.function.call.vba meta.arguments.vba
#                   ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                    ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                     ^^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.range.vba
#                       ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                        ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                         ^ source.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                          ^ source.vba meta.function.call.vba meta.arguments.vba
#                           ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                            ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                             ^^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.range.vba
#                               ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                 ^ source.vba meta.function.call.vba
>
>    Const HDRS As String = "ABC"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#              ^ source.vba meta.declare.constant.vba
#               ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                 ^ source.vba meta.declare.constant.vba
#                  ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                        ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                           ^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const VALS As String = "123"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#              ^ source.vba meta.declare.constant.vba
#               ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                 ^ source.vba meta.declare.constant.vba
#                  ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                        ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                           ^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>
>    Dim i As Long
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    For i = 1 To Len(HDRS)
#^^^^ source.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                 ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba
>        Dim j As Long
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba storage.type.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba keyword.control.as.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#                 ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>        For j = 1 To CLng(Mid(VALS, i, 1))
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#                  ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                          ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                              ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                  ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba entity.name.function.call.vba
#                                     ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#                                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba constant.numeric.vba
#                                        ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
>            Dim n As Long
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#            ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba storage.type.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#                  ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba keyword.control.as.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>            n = n + 1
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba
#                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba keyword.operator.arithmetic.vba
#                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba constant.numeric.vba
>            bulkData(n, 1) = Mid(HDRS, i, 1)
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#            ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba
#                          ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                             ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                 ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>        Next j
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>    Next i
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba
#         ^ source.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>    Dim d As New Dictionary
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                ^ source.vba meta.declare.variable.vba
#                 ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.Dictionary.vba
>
>'   Act
#^^^^^^^ source.vba comment.line.apostrophe.vba
>    On Error Resume Next
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
>    d.AddBulk Application.Transpose(bulkData), _
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^^^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#             ^ source.vba meta.sub-call.vba meta.arguments.vba
#              ^^^^^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                         ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                          ^^^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                   ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                    ^^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                            ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                             ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                                              ^ source.vba meta.sub-call.vba meta.arguments.vba
#                                               ^^ source.vba meta.sub-call.vba meta.arguments.vba keyword.control.line-continuation.vba
>        OptionCountKeys:=True, _
#^^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba
#        ^^^^^^^^^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.arg-name.vba variable.parameter.name.vba
#                       ^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.arg-name.vba punctuation.assignment.parameter.vba
#                         ^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba constant.language.boolean.vba
#                             ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                              ^ source.vba meta.sub-call.vba meta.arguments.vba
#                               ^^ source.vba meta.sub-call.vba meta.arguments.vba keyword.control.line-continuation.vba
>        OptionUseRowMode:=True
#^^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba
#        ^^^^^^^^^^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.arg-name.vba variable.parameter.name.vba
#                        ^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.arg-name.vba punctuation.assignment.parameter.vba
#                          ^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba constant.language.boolean.vba
>
>'   Assert
#^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    If tr.AssertNoException() Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                             ^ source.vba meta.flow.inline-if.vba
#                              ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                  ^ source.vba meta.flow.inline-if.vba
#                                   ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                       ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                        ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    On Error GoTo 0
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#                 ^ source.vba meta.onErrorStatement.vba
#                  ^ source.vba meta.onErrorStatement.vba constant.numeric.vba
>
>    If tr.AssertAreEqual(Len(HDRS), d.Count, "count keys") Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                             ^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                 ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                  ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                   ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                    ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                     ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba punctuation.accessor.vba
#                                      ^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba support.variable.property.vba
#                                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                             ^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
#                                                         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                          ^ source.vba meta.flow.inline-if.vba
#                                                           ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                               ^ source.vba meta.flow.inline-if.vba
#                                                                ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                                    ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                                     ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>
>    For i = 1 To Len(HDRS)
#^^^^ source.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                 ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba
>        Dim h As String, v As Long
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba storage.type.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba keyword.control.as.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#                 ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba punctuation.separator.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#                           ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba keyword.control.as.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#                              ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>        h = Mid(HDRS, i, 1)
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#            ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>        v = CLng(Mid(VALS, i, 1))
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#            ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                 ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>        If tr.AssertAreEqual(v, d(h), h) Then Exit For
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba
#        ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba
#           ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#              ^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba
#                                         ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba
#                                              ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba keyword.control.flow.loop.vba
>    Next i
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba
#         ^ source.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>Finally:
#^^^^^^^ source.vba variable.other.constant.label.vba
#       ^ source.vba
>    Set TestDictionary_AddBulkCountKeysRowMode = tr
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                              ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                                 ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Function
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Private Function TestDictionary_CountItems() As TestResult
#^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                ^ source.vba source.method.signature.vba
#                 ^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                                          ^ source.vba source.method.signature.vba
#                                           ^ source.vba source.method.signature.vba
#                                            ^ source.vba source.method.signature.vba
#                                             ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                               ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                                ^^^^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.object.TestResult.vba
>Attribute TestDictionary_CountItems.VB_Description = "Tests the Count property of the dictionary."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                                   ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                                  ^ source.vba source.method.attribute.vba
#                                                   ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                                    ^ source.vba source.method.attribute.vba
#                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Tests the Count property of the dictionary.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'
#^ source.vba comment.line.apostrophe.vba
>    Dim tr As New TestResult
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^ source.vba meta.declare.variable.vba
#           ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#             ^ source.vba meta.declare.variable.vba
#              ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.TestResult.vba
>
>'   Arrange
#^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Const ADDKEYS As String = "ABCDEFGHIJKLMNOP"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^^^^^^^^^^^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>
>'   Act and Assert
#^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim d As New Dictionary
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                ^ source.vba meta.declare.variable.vba
#                 ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.Dictionary.vba
>    If tr.AssertAreEqual(0, d.Count, "count keys") Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                             ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba punctuation.accessor.vba
#                              ^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba support.variable.property.vba
#                                   ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                    ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                     ^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
#                                                 ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                  ^ source.vba meta.flow.inline-if.vba
#                                                   ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                       ^ source.vba meta.flow.inline-if.vba
#                                                        ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                            ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                             ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>
>    Dim i As Long
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    For i = 1 To Len(ADDKEYS)
#^^^^ source.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                 ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                     ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba
>        d.Add Mid(ADDKEYS, i, 1), Nothing
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba punctuation.accessor.vba
#          ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba entity.name.function.call.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba
#              ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                  ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba
#                                  ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba constant.language.null.vba
>        If tr.AssertAreEqual(i, d.Count, "count keys at " & i) Then Exit For
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba
#        ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba
#           ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#              ^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba punctuation.accessor.vba
#                                  ^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba support.variable.property.vba
#                                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                         ^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
#                                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba
#                                                               ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba
#                                                                    ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.inline-if.vba keyword.control.flow.loop.vba
>    Next i
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba
#         ^ source.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>Finally:
#^^^^^^^ source.vba variable.other.constant.label.vba
#       ^ source.vba
>    Set TestDictionary_CountItems = tr
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                 ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                    ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Function
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Private Function TestDictionary_ItemReturnsItem() As TestResult
#^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                ^ source.vba source.method.signature.vba
#                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                                               ^ source.vba source.method.signature.vba
#                                                ^ source.vba source.method.signature.vba
#                                                 ^ source.vba source.method.signature.vba
#                                                  ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                                    ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                                     ^^^^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.object.TestResult.vba
>Attribute TestDictionary_ItemReturnsItem.VB_Description = "Tests the default and explicit item return."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                                        ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                                       ^ source.vba source.method.attribute.vba
#                                                        ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                                         ^ source.vba source.method.attribute.vba
#                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Tests the default and explicit item return.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim tr As New TestResult
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^ source.vba meta.declare.variable.vba
#           ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#             ^ source.vba meta.declare.variable.vba
#              ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.TestResult.vba
>
>'   Arrange
#^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Const EXPRESA As String = "A Result"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^^^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const EXPRESB As String = "B Result"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^^^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const INPKEYA As String = "A"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const INPKEYB As String = "B"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>
>'   Act
#^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim d As New Dictionary
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                ^ source.vba meta.declare.variable.vba
#                 ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.Dictionary.vba
>    d.Add INPKEYA, EXPRESA
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#         ^ source.vba meta.sub-call.vba meta.arguments.vba
#          ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                  ^ source.vba meta.sub-call.vba meta.arguments.vba
#                   ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
>    d.Add INPKEYB, EXPRESB
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#         ^ source.vba meta.sub-call.vba meta.arguments.vba
#          ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                  ^ source.vba meta.sub-call.vba meta.arguments.vba
#                   ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
>
>'   Assert
#^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    If tr.AssertAreEqual(EXPRESA, d.Item(INPKEYA), INPKEYA) Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                 ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                  ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                   ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                                    ^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                         ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                                ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                                 ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                                  ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                   ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                           ^ source.vba meta.flow.inline-if.vba
#                                                            ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                                ^ source.vba meta.flow.inline-if.vba
#                                                                 ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                                     ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                                      ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    If tr.AssertAreEqual(EXPRESB, d(INPKEYB), INPKEYB) Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                 ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                  ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                   ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                    ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                             ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                              ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                                     ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                      ^ source.vba meta.flow.inline-if.vba
#                                                       ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                           ^ source.vba meta.flow.inline-if.vba
#                                                            ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                                ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                                 ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>
>Finally:
#^^^^^^^ source.vba variable.other.constant.label.vba
#       ^ source.vba
>    Set TestDictionary_ItemReturnsItem = tr
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                      ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                         ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Function
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Private Function TestDictionary_Exists() As TestResult
#^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                ^ source.vba source.method.signature.vba
#                 ^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                                      ^ source.vba source.method.signature.vba
#                                       ^ source.vba source.method.signature.vba
#                                        ^ source.vba source.method.signature.vba
#                                         ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                           ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                            ^^^^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.object.TestResult.vba
>Attribute TestDictionary_Exists.VB_Description = "Tests Exists property works positively and negatively."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                               ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                              ^ source.vba source.method.attribute.vba
#                                               ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                                ^ source.vba source.method.attribute.vba
#                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Tests Exists property works positively and negatively.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim tr As New TestResult
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^ source.vba meta.declare.variable.vba
#           ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#             ^ source.vba meta.declare.variable.vba
#              ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.TestResult.vba
>
>'   Arrange
#^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Const INPKEYA As String = "A"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const INPKEYB As String = "B"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Dim d As New Dictionary
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                ^ source.vba meta.declare.variable.vba
#                 ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.Dictionary.vba
>    d.Add INPKEYA, Nothing
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#         ^ source.vba meta.sub-call.vba meta.arguments.vba
#          ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                  ^ source.vba meta.sub-call.vba meta.arguments.vba
#                   ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba constant.language.null.vba
>
>'   Act
#^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim posResult As Boolean
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.variable.vba
#                     ^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Boolean.vba
>    posResult = d.Exists(INPKEYA)
#^^^^ source.vba
#    ^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                 ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                  ^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>    Dim negResult As Boolean
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.variable.vba
#                     ^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Boolean.vba
>    negResult = d.Exists(INPKEYB)
#^^^^ source.vba
#    ^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                 ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                  ^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>'   Assert
#^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    If tr.AssertIsTrue(posResult, "positive check") Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                      ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                       ^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                 ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                  ^^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
#                                                  ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                   ^ source.vba meta.flow.inline-if.vba
#                                                    ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                        ^ source.vba meta.flow.inline-if.vba
#                                                         ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                             ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                              ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    If tr.AssertIsFalse(negResult, "negative check") Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                       ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                        ^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                 ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                  ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                   ^^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
#                                                   ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                    ^ source.vba meta.flow.inline-if.vba
#                                                     ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                         ^ source.vba meta.flow.inline-if.vba
#                                                          ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                              ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                               ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>
>Finally:
#^^^^^^^ source.vba variable.other.constant.label.vba
#       ^ source.vba
>    Set TestDictionary_Exists = tr
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                             ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Function
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Private Function TestDictionary_GetItemsReturnsAllItems() As TestResult
#^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                ^ source.vba source.method.signature.vba
#                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                                                       ^ source.vba source.method.signature.vba
#                                                        ^ source.vba source.method.signature.vba
#                                                         ^ source.vba source.method.signature.vba
#                                                          ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                                            ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                                             ^^^^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.object.TestResult.vba
>Attribute TestDictionary_GetItemsReturnsAllItems.VB_Description = "Test Items returns all items."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                                                ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                                               ^ source.vba source.method.attribute.vba
#                                                                ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                                                 ^ source.vba source.method.attribute.vba
#                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Test Items returns all items.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim tr As New TestResult
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^ source.vba meta.declare.variable.vba
#           ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#             ^ source.vba meta.declare.variable.vba
#              ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.TestResult.vba
>
>'   Arrange
#^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Const EXPRESA As String = "A Result"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^^^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const EXPRESB As String = "B Result"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^^^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const INPKEYA As String = "A"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const INPKEYB As String = "B"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>
>    Dim d As New Dictionary
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                ^ source.vba meta.declare.variable.vba
#                 ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.Dictionary.vba
>    d.Add INPKEYA, EXPRESA
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#         ^ source.vba meta.sub-call.vba meta.arguments.vba
#          ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                  ^ source.vba meta.sub-call.vba meta.arguments.vba
#                   ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
>    d.Add INPKEYB, EXPRESB
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#         ^ source.vba meta.sub-call.vba meta.arguments.vba
#          ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                  ^ source.vba meta.sub-call.vba meta.arguments.vba
#                   ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
>
>'   Act
#^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim result As Variant
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#              ^ source.vba meta.declare.variable.vba
#               ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
>    result = d.Items()
#^^^^ source.vba
#    ^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#             ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#              ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#               ^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                    ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                     ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>'   Assert
#^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    On Error Resume Next
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
>    If tr.AssertAreEqual(EXPRESA, result(0), INPKEYA) Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                 ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                  ^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                             ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                                    ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                     ^ source.vba meta.flow.inline-if.vba
#                                                      ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                          ^ source.vba meta.flow.inline-if.vba
#                                                           ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                               ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                                ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    If tr.AssertAreEqual(EXPRESB, result(1), INPKEYB) Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                 ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                  ^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                             ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                                    ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                     ^ source.vba meta.flow.inline-if.vba
#                                                      ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                          ^ source.vba meta.flow.inline-if.vba
#                                                           ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                               ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                                ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    If tr.AssertNoException() Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                             ^ source.vba meta.flow.inline-if.vba
#                              ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                  ^ source.vba meta.flow.inline-if.vba
#                                   ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                       ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                        ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>
>Finally:
#^^^^^^^ source.vba variable.other.constant.label.vba
#       ^ source.vba
>    Set TestDictionary_GetItemsReturnsAllItems = tr
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                              ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                                 ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Function
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Private Function TestDictionary_GetKeysReturnsKeys() As TestResult
#^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                ^ source.vba source.method.signature.vba
#                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                                                  ^ source.vba source.method.signature.vba
#                                                   ^ source.vba source.method.signature.vba
#                                                    ^ source.vba source.method.signature.vba
#                                                     ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                                       ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                                        ^^^^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.object.TestResult.vba
>Attribute TestDictionary_GetKeysReturnsKeys.VB_Description = "Test Keys returns all keys."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                                           ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                                          ^ source.vba source.method.attribute.vba
#                                                           ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                                            ^ source.vba source.method.attribute.vba
#                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Test Keys returns all keys.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim tr As New TestResult
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^ source.vba meta.declare.variable.vba
#           ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#             ^ source.vba meta.declare.variable.vba
#              ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.TestResult.vba
>
>'   Arrange
#^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Const INPKEYA As String = "A"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const INPKEYB As String = "B"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>
>    Dim d As New Dictionary
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                ^ source.vba meta.declare.variable.vba
#                 ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.Dictionary.vba
>    d.Add INPKEYA, Nothing
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#         ^ source.vba meta.sub-call.vba meta.arguments.vba
#          ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                  ^ source.vba meta.sub-call.vba meta.arguments.vba
#                   ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba constant.language.null.vba
>    d.Add INPKEYB, Nothing
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#         ^ source.vba meta.sub-call.vba meta.arguments.vba
#          ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                  ^ source.vba meta.sub-call.vba meta.arguments.vba
#                   ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba constant.language.null.vba
>
>'   Act
#^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim result As Variant
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#              ^ source.vba meta.declare.variable.vba
#               ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
>    result = d.Keys()
#^^^^ source.vba
#    ^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#             ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#              ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#               ^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                   ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                    ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>'   Assert
#^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    On Error Resume Next
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
>    If tr.AssertAreEqual(INPKEYA, result(0)) Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                 ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                  ^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                            ^ source.vba meta.flow.inline-if.vba
#                                             ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                 ^ source.vba meta.flow.inline-if.vba
#                                                  ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                      ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                       ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    If tr.AssertAreEqual(INPKEYB, result(1)) Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                 ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                  ^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                            ^ source.vba meta.flow.inline-if.vba
#                                             ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                 ^ source.vba meta.flow.inline-if.vba
#                                                  ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                      ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                       ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    If tr.AssertNoException() Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                             ^ source.vba meta.flow.inline-if.vba
#                              ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                  ^ source.vba meta.flow.inline-if.vba
#                                   ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                       ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                        ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>
>Finally:
#^^^^^^^ source.vba variable.other.constant.label.vba
#       ^ source.vba
>    Set TestDictionary_GetKeysReturnsKeys = tr
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                         ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                            ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Function
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Private Function TestDictionary_GetDataReturnsData() As TestResult
#^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                ^ source.vba source.method.signature.vba
#                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                                                  ^ source.vba source.method.signature.vba
#                                                   ^ source.vba source.method.signature.vba
#                                                    ^ source.vba source.method.signature.vba
#                                                     ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                                       ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                                        ^^^^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.object.TestResult.vba
>Attribute TestDictionary_GetDataReturnsData.VB_Description = "Test data out matches data in."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                                           ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                                          ^ source.vba source.method.attribute.vba
#                                                           ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                                            ^ source.vba source.method.attribute.vba
#                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Test data out matches data in.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim tr As New TestResult
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^ source.vba meta.declare.variable.vba
#           ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#             ^ source.vba meta.declare.variable.vba
#              ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.TestResult.vba
>
>'   Arrange
#^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim bulkData() As Variant
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                 ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                  ^ source.vba meta.declare.variable.vba
#                   ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                     ^ source.vba meta.declare.variable.vba
#                      ^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
>    ReDim bulkData(1 To 3, 1 To 4)
#^^^^ source.vba
#    ^^^^^ source.vba keyword.array.vba
#         ^ source.vba
#          ^^^^^^^^ source.vba meta.function.call.vba entity.name.function.call.vba
#                  ^ source.vba meta.function.call.vba meta.arguments.vba
#                   ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                    ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                     ^^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.range.vba
#                       ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                        ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                         ^ source.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                          ^ source.vba meta.function.call.vba meta.arguments.vba
#                           ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                            ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                             ^^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.range.vba
#                               ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                 ^ source.vba meta.function.call.vba
>
>    Const HDRS As String = "ABC"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#              ^ source.vba meta.declare.constant.vba
#               ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                 ^ source.vba meta.declare.constant.vba
#                  ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                        ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                           ^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const VALS As String = " 123"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#              ^ source.vba meta.declare.constant.vba
#               ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                 ^ source.vba meta.declare.constant.vba
#                  ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                        ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                           ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>
>    Dim i As Long
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    For i = 1 To UBound(bulkData, 1)
#^^^^ source.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                 ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                        ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba constant.numeric.vba
#                                   ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
>        Dim j As Long
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba storage.type.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba keyword.control.as.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#                 ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>        For j = 1 To UBound(bulkData, 2)
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#                  ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                     ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                            ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                    ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba constant.numeric.vba
#                                       ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
>            If j = 1 Then
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#            ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba keyword.control.block-if.open.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba keyword.operator.comparison.vba
#                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba constant.numeric.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba
#                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.open.vba
>                bulkData(i, j) = Mid(HDRS, i, 1)
#^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba
#                              ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                 ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>            Else
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.else.vba
>                bulkData(i, j) = Mid(HDRS, i, 1) & Mid(VALS, j, 1)
#^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba
#                              ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                 ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
#                                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba
#                                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba
#                                                   ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                       ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>            End If
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.close.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba keyword.control.block-if.close.vba
>        Next j
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>    Next i
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba
#         ^ source.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>    On Error Resume Next
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
>    Dim d As New Dictionary
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                ^ source.vba meta.declare.variable.vba
#                 ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.Dictionary.vba
>    d.AddBulk bulkData
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^^^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#             ^ source.vba meta.sub-call.vba meta.arguments.vba
#              ^^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>'   Act
#^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim results As Variant
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#               ^ source.vba meta.declare.variable.vba
#                ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                  ^ source.vba meta.declare.variable.vba
#                   ^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
>    results = d.GetData()
#^^^^ source.vba
#    ^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#           ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#              ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#               ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                ^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                       ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                        ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>'   Assert
#^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    If tr.AssertNoException() Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                             ^ source.vba meta.flow.inline-if.vba
#                              ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                  ^ source.vba meta.flow.inline-if.vba
#                                   ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                       ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                        ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    On Error GoTo 0
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#                 ^ source.vba meta.onErrorStatement.vba
#                  ^ source.vba meta.onErrorStatement.vba constant.numeric.vba
>
>    For i = 1 To UBound(bulkData, 1)
#^^^^ source.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                 ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                        ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba constant.numeric.vba
#                                   ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
>        For j = 2 To UBound(bulkData, 2)
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#                  ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                     ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                            ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                    ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba constant.numeric.vba
#                                       ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
>            If results(i, j) <> bulkData(i, j) Then
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#            ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba keyword.control.block-if.open.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba
#               ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba keyword.operator.comparison.vba
#                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba keyword.operator.comparison.vba
#                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                                ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.function.call.vba
#                                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba
#                                               ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.open.vba
>                tr.Failed = True
#^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba punctuation.accessor.vba
#                   ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba support.variable.property.vba
#                         ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                            ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba constant.language.boolean.vba
>                tr.Message = "Dictionary data failed validation."
#^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba punctuation.accessor.vba
#                   ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.variable-or-property.vba support.variable.property.vba
#                          ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>            End If
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.close.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba keyword.control.block-if.close.vba
>        Next j
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>    Next i
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba
#         ^ source.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>Finally:
#^^^^^^^ source.vba variable.other.constant.label.vba
#       ^ source.vba
>    Set TestDictionary_GetDataReturnsData = tr
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                         ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                            ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Function
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Private Function TestDictionary_OptionNoItemFailOverwrites() As TestResult
#^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                ^ source.vba source.method.signature.vba
#                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                                                          ^ source.vba source.method.signature.vba
#                                                           ^ source.vba source.method.signature.vba
#                                                            ^ source.vba source.method.signature.vba
#                                                             ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                                               ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                                                ^^^^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.object.TestResult.vba
>Attribute TestDictionary_OptionNoItemFailOverwrites.VB_Description = "OptionNoItemFail overwrites rather than throwing."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                                                   ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                                                  ^ source.vba source.method.attribute.vba
#                                                                   ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                                                    ^ source.vba source.method.attribute.vba
#                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   OptionNoItemFail overwrites rather than throwing.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim tr As New TestResult
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^ source.vba meta.declare.variable.vba
#           ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#             ^ source.vba meta.declare.variable.vba
#              ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.TestResult.vba
>
>'   Arrange
#^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Const INPKEYA As String = "A"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const INPVALA As String = "A Value"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const INPVALB As String = "Visibly different value to A"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>
>'   Act
#^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim d As New Dictionary
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                ^ source.vba meta.declare.variable.vba
#                 ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.Dictionary.vba
>    d.OptionNoItemFail = True
#^^^^ source.vba
#    ^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba punctuation.accessor.vba
#      ^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba support.variable.property.vba
#                      ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                         ^^^^ source.vba meta.variable-assignment.vba meta.expression.vba constant.language.boolean.vba
>
>    On Error Resume Next
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
>    d.Add INPKEYA, INPVALA
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#         ^ source.vba meta.sub-call.vba meta.arguments.vba
#          ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                  ^ source.vba meta.sub-call.vba meta.arguments.vba
#                   ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
>    d.Add INPKEYA, INPVALB
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#         ^ source.vba meta.sub-call.vba meta.arguments.vba
#          ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                  ^ source.vba meta.sub-call.vba meta.arguments.vba
#                   ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
>
>'   Assert
#^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    If tr.AssertNoException() Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                             ^ source.vba meta.flow.inline-if.vba
#                              ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                  ^ source.vba meta.flow.inline-if.vba
#                                   ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                       ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                        ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    On Error GoTo 0
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#                 ^ source.vba meta.onErrorStatement.vba
#                  ^ source.vba meta.onErrorStatement.vba constant.numeric.vba
>
>    If tr.AssertAreEqual(1, d.Count, "count") Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                             ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba punctuation.accessor.vba
#                              ^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba support.variable.property.vba
#                                   ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                    ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                     ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
#                                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                             ^ source.vba meta.flow.inline-if.vba
#                                              ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                  ^ source.vba meta.flow.inline-if.vba
#                                                   ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                       ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                        ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    If tr.AssertAreEqual(INPVALB, d(INPKEYA), INPKEYA) Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                 ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                  ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                   ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                    ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                             ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                              ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                                     ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                      ^ source.vba meta.flow.inline-if.vba
#                                                       ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                           ^ source.vba meta.flow.inline-if.vba
#                                                            ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                                ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                                 ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>
>Finally:
#^^^^^^^ source.vba variable.other.constant.label.vba
#       ^ source.vba
>    Set TestDictionary_OptionNoItemFailOverwrites = tr
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                 ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                                    ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Function
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Private Function TestDictionary_NoOptionNoItemFailThrows() As TestResult
#^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                ^ source.vba source.method.signature.vba
#                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                                                        ^ source.vba source.method.signature.vba
#                                                         ^ source.vba source.method.signature.vba
#                                                          ^ source.vba source.method.signature.vba
#                                                           ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                                             ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                                              ^^^^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.object.TestResult.vba
>Attribute TestDictionary_NoOptionNoItemFailThrows.VB_Description = "Without OptionNoItemFail throws rather than overwriting."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                                                 ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                                                ^ source.vba source.method.attribute.vba
#                                                                 ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                                                  ^ source.vba source.method.attribute.vba
#                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Without OptionNoItemFail throws rather than overwriting.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'   This test requires "Error Handling > Break on Unhandled Errors" set.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>'   If "Break in class module" is set, the 
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim tr As New TestResult
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^ source.vba meta.declare.variable.vba
#           ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#             ^ source.vba meta.declare.variable.vba
#              ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.TestResult.vba
>
>'   Arrange
#^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Const DUPLICATEKEYEX As Long = 457
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                        ^ source.vba meta.declare.constant.vba
#                         ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                           ^ source.vba meta.declare.constant.vba
#                            ^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
#                                ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                   ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba constant.numeric.vba
>    Const INPKEYA As String = "A"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const INPVALA As String = "A Value"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const INPVALB As String = "A Value"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>
>'   Act
#^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim d As New Dictionary
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                ^ source.vba meta.declare.variable.vba
#                 ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.Dictionary.vba
>    d.OptionNoItemFail = False
#^^^^ source.vba
#    ^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba punctuation.accessor.vba
#      ^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba support.variable.property.vba
#                      ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                         ^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba constant.language.boolean.vba
>
>    d.Add INPKEYA, INPVALA
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#         ^ source.vba meta.sub-call.vba meta.arguments.vba
#          ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                  ^ source.vba meta.sub-call.vba meta.arguments.vba
#                   ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
>    On Error Resume Next
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
>    d.Add INPKEYA, INPVALB
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#         ^ source.vba meta.sub-call.vba meta.arguments.vba
#          ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                  ^ source.vba meta.sub-call.vba meta.arguments.vba
#                   ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
>
>'   Assert
#^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    If tr.AssertRaised(vbObjectError + DUPLICATEKEYEX) Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                      ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                       ^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                    ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                     ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                      ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                       ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                                     ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                      ^ source.vba meta.flow.inline-if.vba
#                                                       ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                           ^ source.vba meta.flow.inline-if.vba
#                                                            ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                                ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                                 ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    On Error GoTo 0
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#                 ^ source.vba meta.onErrorStatement.vba
#                  ^ source.vba meta.onErrorStatement.vba constant.numeric.vba
>
>    If tr.AssertAreEqual(1, d.Count, "count") Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                             ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba punctuation.accessor.vba
#                              ^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba support.variable.property.vba
#                                   ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                    ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                     ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
#                                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                             ^ source.vba meta.flow.inline-if.vba
#                                              ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                  ^ source.vba meta.flow.inline-if.vba
#                                                   ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                       ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                        ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    If tr.AssertAreEqual(INPVALA, d(INPKEYA), INPKEYA) Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                 ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                  ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                   ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                    ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                             ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                              ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                                     ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                      ^ source.vba meta.flow.inline-if.vba
#                                                       ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                           ^ source.vba meta.flow.inline-if.vba
#                                                            ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                                ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                                 ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>
>Finally:
#^^^^^^^ source.vba variable.other.constant.label.vba
#       ^ source.vba
>    Set TestDictionary_NoOptionNoItemFailThrows = tr
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                               ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                                  ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Function
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Private Function TestDictionary_DataRowsAndColsCorrect() As TestResult
#^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                ^ source.vba source.method.signature.vba
#                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                                                      ^ source.vba source.method.signature.vba
#                                                       ^ source.vba source.method.signature.vba
#                                                        ^ source.vba source.method.signature.vba
#                                                         ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                                           ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                                            ^^^^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.object.TestResult.vba
>Attribute TestDictionary_DataRowsAndColsCorrect.VB_Description = "Tests the DataRows and DataCols properties."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                                               ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                                              ^ source.vba source.method.attribute.vba
#                                                               ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                                                ^ source.vba source.method.attribute.vba
#                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Tests the DataRows and DataCols properties.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim tr As New TestResult
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^ source.vba meta.declare.variable.vba
#           ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#             ^ source.vba meta.declare.variable.vba
#              ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.TestResult.vba
>
>'   Arrange
#^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim bulkData() As Variant
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                 ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                  ^ source.vba meta.declare.variable.vba
#                   ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                     ^ source.vba meta.declare.variable.vba
#                      ^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
>    ReDim bulkData(1 To 3, 1 To 4)
#^^^^ source.vba
#    ^^^^^ source.vba keyword.array.vba
#         ^ source.vba
#          ^^^^^^^^ source.vba meta.function.call.vba entity.name.function.call.vba
#                  ^ source.vba meta.function.call.vba meta.arguments.vba
#                   ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                    ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                     ^^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.range.vba
#                       ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                        ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                         ^ source.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                          ^ source.vba meta.function.call.vba meta.arguments.vba
#                           ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                            ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                             ^^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.range.vba
#                               ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                ^ source.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                 ^ source.vba meta.function.call.vba
>
>    Const HDRS As String = "ABC"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#              ^ source.vba meta.declare.constant.vba
#               ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                 ^ source.vba meta.declare.constant.vba
#                  ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                        ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                           ^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const VALS As String = " 123"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#              ^ source.vba meta.declare.constant.vba
#               ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                 ^ source.vba meta.declare.constant.vba
#                  ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                        ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                           ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>
>    Dim i As Long
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    For i = 1 To UBound(bulkData, 1)
#^^^^ source.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                 ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                        ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba constant.numeric.vba
#                                   ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
>        Dim j As Long
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba storage.type.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba keyword.control.as.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba
#                 ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>        For j = 1 To UBound(bulkData, 2)
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#                  ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                     ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                            ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                    ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba constant.numeric.vba
#                                       ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
>            If j = 1 Then
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#            ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba keyword.control.block-if.open.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba keyword.operator.comparison.vba
#                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba
#                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.expression.vba constant.numeric.vba
#                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba
#                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.open.vba
>                bulkData(i, j) = Mid(HDRS, i, 1)
#^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba
#                              ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                 ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>            Else
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.else.vba
>                bulkData(i, j) = Mid(HDRS, i, 1) & Mid(VALS, j, 1)
#^^^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                ^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.function.call.vba
#                              ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                 ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                    ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
#                                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba
#                                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba
#                                                   ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                       ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                                           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                                            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                              ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>            End If
#^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#            ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba keyword.control.block-if.close.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba meta.block-if.condition.vba meta.block-if.then.vba
#                ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.block-if-else.vba keyword.control.block-if.close.vba
>        Next j
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>    Next i
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba
#         ^ source.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>    On Error Resume Next
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
>    Dim d As New Dictionary
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                ^ source.vba meta.declare.variable.vba
#                 ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.Dictionary.vba
>    d.AddBulk bulkData
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^^^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#             ^ source.vba meta.sub-call.vba meta.arguments.vba
#              ^^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>'   Act
#^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim dRowsColMode As Long
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                    ^ source.vba meta.declare.variable.vba
#                     ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                       ^ source.vba meta.declare.variable.vba
#                        ^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    dRowsColMode = d.DataRows()
#^^^^ source.vba
#    ^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                   ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                    ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                     ^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                             ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                              ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>    Dim dColsColMode As Long
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                    ^ source.vba meta.declare.variable.vba
#                     ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                       ^ source.vba meta.declare.variable.vba
#                        ^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    dColsColMode = d.DataCols()
#^^^^ source.vba
#    ^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                   ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                    ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                     ^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                             ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                              ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>    Dim dRowsRowMode As Long
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                    ^ source.vba meta.declare.variable.vba
#                     ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                       ^ source.vba meta.declare.variable.vba
#                        ^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    dRowsRowMode = d.DataRows(OptionUseRowMode:=True)
#^^^^ source.vba
#    ^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                   ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                    ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                     ^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                             ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                              ^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.arg-name.vba variable.parameter.name.vba
#                                              ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.arg-name.vba punctuation.assignment.parameter.vba
#                                                ^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.language.boolean.vba
#                                                    ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>    Dim dColsRowMode As Long
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                    ^ source.vba meta.declare.variable.vba
#                     ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                       ^ source.vba meta.declare.variable.vba
#                        ^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    dColsRowMode = d.DataCols(OptionUseRowMode:=True)
#^^^^ source.vba
#    ^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                   ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                    ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                     ^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                             ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                              ^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.arg-name.vba variable.parameter.name.vba
#                                              ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.arg-name.vba punctuation.assignment.parameter.vba
#                                                ^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.language.boolean.vba
#                                                    ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>'   Assert
#^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    If tr.AssertNoException() Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                             ^ source.vba meta.flow.inline-if.vba
#                              ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                  ^ source.vba meta.flow.inline-if.vba
#                                   ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                       ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                        ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    On Error GoTo 0
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#                 ^ source.vba meta.onErrorStatement.vba
#                  ^ source.vba meta.onErrorStatement.vba constant.numeric.vba
>
>    If tr.AssertAreEqual(UBound(bulkData, 1), dRowsColMode) Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                               ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                ^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                             ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                              ^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                           ^ source.vba meta.flow.inline-if.vba
#                                                            ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                                ^ source.vba meta.flow.inline-if.vba
#                                                                 ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                                     ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                                      ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    If tr.AssertAreEqual(UBound(bulkData, 2), dColsColMode) Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                               ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                ^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                             ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                              ^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                           ^ source.vba meta.flow.inline-if.vba
#                                                            ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                                ^ source.vba meta.flow.inline-if.vba
#                                                                 ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                                     ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                                      ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    If tr.AssertAreEqual(UBound(bulkData, 2), dRowsRowMode) Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                               ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                ^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                             ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                              ^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                           ^ source.vba meta.flow.inline-if.vba
#                                                            ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                                ^ source.vba meta.flow.inline-if.vba
#                                                                 ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                                     ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                                      ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    If tr.AssertAreEqual(UBound(bulkData, 1), dColsRowMode) Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                               ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                ^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                             ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                              ^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                           ^ source.vba meta.flow.inline-if.vba
#                                                            ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                                ^ source.vba meta.flow.inline-if.vba
#                                                                 ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                                     ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                                      ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>
>Finally:
#^^^^^^^ source.vba variable.other.constant.label.vba
#       ^ source.vba
>    Set TestDictionary_DataRowsAndColsCorrect = tr
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                             ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                                ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Function
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Private Function TestDictionary_RemoveRemovesKey() As TestResult
#^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                ^ source.vba source.method.signature.vba
#                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                                                ^ source.vba source.method.signature.vba
#                                                 ^ source.vba source.method.signature.vba
#                                                  ^ source.vba source.method.signature.vba
#                                                   ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                                     ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                                      ^^^^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.object.TestResult.vba
>Attribute TestDictionary_RemoveRemovesKey.VB_Description = "Test that remove removes the key."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                                         ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                                        ^ source.vba source.method.attribute.vba
#                                                         ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                                          ^ source.vba source.method.attribute.vba
#                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Test that remove removes the key.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim tr As New TestResult
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^ source.vba meta.declare.variable.vba
#           ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#             ^ source.vba meta.declare.variable.vba
#              ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.TestResult.vba
>
>'   Arrange
#^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Const INPKEYA As String = "A"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const INPKEYB As String = "B"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>
>    Dim d As New Dictionary
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                ^ source.vba meta.declare.variable.vba
#                 ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.Dictionary.vba
>    d.Add INPKEYA, Nothing
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#         ^ source.vba meta.sub-call.vba meta.arguments.vba
#          ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                  ^ source.vba meta.sub-call.vba meta.arguments.vba
#                   ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba constant.language.null.vba
>    d.Add INPKEYB, Nothing
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#         ^ source.vba meta.sub-call.vba meta.arguments.vba
#          ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                  ^ source.vba meta.sub-call.vba meta.arguments.vba
#                   ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba constant.language.null.vba
>
>'   Act
#^^^^^^^ source.vba comment.line.apostrophe.vba
>    d.Remove INPKEYA
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#            ^ source.vba meta.sub-call.vba meta.arguments.vba
#             ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
>
>'   Assert
#^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    On Error Resume Next
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
>    If tr.AssertIsFalse(d.Exists(INPKEYA), "key A exists") Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                       ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                          ^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                 ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                           ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
#                                                         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                          ^ source.vba meta.flow.inline-if.vba
#                                                           ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                               ^ source.vba meta.flow.inline-if.vba
#                                                                ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                                    ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                                     ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    If tr.AssertIsTrue(d.Exists(INPKEYB), "key B exists") Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                      ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                       ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                         ^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                               ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                       ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
#                                                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                         ^ source.vba meta.flow.inline-if.vba
#                                                          ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                              ^ source.vba meta.flow.inline-if.vba
#                                                               ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                                   ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                                    ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    If tr.AssertNoException() Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                             ^ source.vba meta.flow.inline-if.vba
#                              ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                  ^ source.vba meta.flow.inline-if.vba
#                                   ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                       ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                        ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>
>Finally:
#^^^^^^^ source.vba variable.other.constant.label.vba
#       ^ source.vba
>    On Error GoTo 0
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#                 ^ source.vba meta.onErrorStatement.vba
#                  ^ source.vba meta.onErrorStatement.vba constant.numeric.vba
>    Set TestDictionary_RemoveRemovesKey = tr
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                       ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                          ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Function
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Private Function TestDictionary_RemoveUpdatesMeta() As TestResult
#^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                ^ source.vba source.method.signature.vba
#                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                                                 ^ source.vba source.method.signature.vba
#                                                  ^ source.vba source.method.signature.vba
#                                                   ^ source.vba source.method.signature.vba
#                                                    ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                                      ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                                       ^^^^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.object.TestResult.vba
>Attribute TestDictionary_RemoveUpdatesMeta.VB_Description = "Github issue #3 Array tracking when largest element is removed."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                                          ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                                         ^ source.vba source.method.attribute.vba
#                                                          ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                                           ^ source.vba source.method.attribute.vba
#                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Github issue #3 Array tracking when largest element is removed.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim tr As New TestResult
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^ source.vba meta.declare.variable.vba
#           ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#             ^ source.vba meta.declare.variable.vba
#              ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.TestResult.vba
>
>'   Arrange
#^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Const INPKEYA As String = "A"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const INPKEYB As String = "B"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>
>    Dim inpValA() As Variant
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#               ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.variable.vba
#                     ^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
>    inpValA = Array(1, 2)
#^^^^ source.vba
#    ^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#           ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#              ^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                   ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                    ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                     ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                      ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                       ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                        ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>    Dim inpValB() As Variant
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#               ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.variable.vba
#                     ^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
>    inpValB = Array(1, 2, 3, 4)
#^^^^ source.vba
#    ^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#           ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#              ^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                   ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                    ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                     ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                      ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                       ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                        ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                         ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                          ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                           ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                            ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                             ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                              ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>    Dim d As New Dictionary
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                ^ source.vba meta.declare.variable.vba
#                 ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.Dictionary.vba
>    d.Add INPKEYA, inpValA
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#         ^ source.vba meta.sub-call.vba meta.arguments.vba
#          ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                  ^ source.vba meta.sub-call.vba meta.arguments.vba
#                   ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>    d.Add INPKEYB, inpValB
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#         ^ source.vba meta.sub-call.vba meta.arguments.vba
#          ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                  ^ source.vba meta.sub-call.vba meta.arguments.vba
#                   ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>'   Act
#^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim beforeRemoveColCount As Long
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^^^^^^^^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                            ^ source.vba meta.declare.variable.vba
#                             ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                               ^ source.vba meta.declare.variable.vba
#                                ^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    beforeRemoveColCount = d.DataCols()
#^^^^ source.vba
#    ^^^^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                        ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                           ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                            ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                             ^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                     ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                      ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>    d.Remove INPKEYB
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#            ^ source.vba meta.sub-call.vba meta.arguments.vba
#             ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
>
>    Dim afterRemoveColCount As Long
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^^^^^^^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                           ^ source.vba meta.declare.variable.vba
#                            ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                              ^ source.vba meta.declare.variable.vba
#                               ^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    afterRemoveColCount = d.DataCols()
#^^^^ source.vba
#    ^^^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                       ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                          ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                           ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                            ^^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                    ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                     ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>'   Assert
#^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    On Error Resume Next
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
>    If tr.AssertAreNotEqual(beforeRemoveColCount, afterRemoveColCount, "row counts") Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                            ^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                                 ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                  ^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                                     ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                                                      ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                                       ^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
#                                                                                   ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                                                    ^ source.vba meta.flow.inline-if.vba
#                                                                                     ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                                                         ^ source.vba meta.flow.inline-if.vba
#                                                                                          ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                                                              ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                                                               ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    If tr.AssertAreEqual(UBound(inpValB) + 2, beforeRemoveColCount) Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                               ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                       ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                             ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                              ^^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                                  ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                                   ^ source.vba meta.flow.inline-if.vba
#                                                                    ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                                        ^ source.vba meta.flow.inline-if.vba
#                                                                         ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                                             ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                                              ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    If tr.AssertAreEqual(UBound(inpValA) + 2, afterRemoveColCount) Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                               ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                       ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                             ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                              ^^^^^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                                 ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                                  ^ source.vba meta.flow.inline-if.vba
#                                                                   ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                                       ^ source.vba meta.flow.inline-if.vba
#                                                                        ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                                            ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                                             ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    If tr.AssertNoException() Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                             ^ source.vba meta.flow.inline-if.vba
#                              ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                  ^ source.vba meta.flow.inline-if.vba
#                                   ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                       ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                        ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>
>Finally:
#^^^^^^^ source.vba variable.other.constant.label.vba
#       ^ source.vba
>    On Error GoTo 0
#^^^^ source.vba
#    ^^^^^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#            ^ source.vba meta.onErrorStatement.vba
#             ^^^^ source.vba meta.onErrorStatement.vba keyword.control.flow.jump.vba
#                 ^ source.vba meta.onErrorStatement.vba
#                  ^ source.vba meta.onErrorStatement.vba constant.numeric.vba
>    Set TestDictionary_RemoveUpdatesMeta = tr
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                        ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                           ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Function
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Private Function TestDictionary_ExistWorksWithInteger() As TestResult
#^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                ^ source.vba source.method.signature.vba
#                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                                                     ^ source.vba source.method.signature.vba
#                                                      ^ source.vba source.method.signature.vba
#                                                       ^ source.vba source.method.signature.vba
#                                                        ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                                          ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                                           ^^^^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.object.TestResult.vba
>Attribute TestDictionary_ExistWorksWithInteger.VB_Description = "Github Issue #5 Integer keys are never found with .Exists method."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                                              ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                                             ^ source.vba source.method.attribute.vba
#                                                              ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                                               ^ source.vba source.method.attribute.vba
#                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Github Issue #5 Integer keys are never found with .Exists method.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim tr As New TestResult
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^ source.vba meta.declare.variable.vba
#           ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#             ^ source.vba meta.declare.variable.vba
#              ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.TestResult.vba
>
>'   Arrange
#^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim d As New Dictionary
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                ^ source.vba meta.declare.variable.vba
#                 ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.Dictionary.vba
>    d.Add 0, Nothing
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#         ^ source.vba meta.sub-call.vba meta.arguments.vba
#          ^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#           ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#            ^ source.vba meta.sub-call.vba meta.arguments.vba
#             ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba constant.language.null.vba
>
>'   Act
#^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim result As Boolean
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#              ^ source.vba meta.declare.variable.vba
#               ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Boolean.vba
>    result = d.Exists(0)
#^^^^ source.vba
#    ^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#             ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#              ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#               ^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                     ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                      ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                       ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>'   Assert
#^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    If tr.AssertIsTrue(result, "result exists") Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                      ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                       ^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                             ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                              ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                               ^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
#                                              ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                               ^ source.vba meta.flow.inline-if.vba
#                                                ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                    ^ source.vba meta.flow.inline-if.vba
#                                                     ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                         ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                          ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>
>
>Finally:
#^^^^^^^ source.vba variable.other.constant.label.vba
#       ^ source.vba
>    Set TestDictionary_ExistWorksWithInteger = tr
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                            ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                               ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Function
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Private Function TestDictionary_GetDataWorksWithVariableArrays() As TestResult
#^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                ^ source.vba source.method.signature.vba
#                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                                                              ^ source.vba source.method.signature.vba
#                                                               ^ source.vba source.method.signature.vba
#                                                                ^ source.vba source.method.signature.vba
#                                                                 ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                                                   ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                                                    ^^^^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.object.TestResult.vba
>Attribute TestDictionary_GetDataWorksWithVariableArrays.VB_Description = "Github issue #2 Unexpected value array sizes can cause GetData to raise out of bounds error."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                                                       ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                                                      ^ source.vba source.method.attribute.vba
#                                                                       ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                                                        ^ source.vba source.method.attribute.vba
#                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Github issue #2 Unexpected value array sizes can cause GetData to raise out of bounds error.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim tr As New TestResult
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^ source.vba meta.declare.variable.vba
#           ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#             ^ source.vba meta.declare.variable.vba
#              ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.TestResult.vba
>
>'   Arrange
#^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Const INPKEYA As String = "A"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const INPKEYB As String = "B"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>
>    Dim inpValA() As Variant
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#               ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.variable.vba
#                     ^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
>    inpValA = Array(1, 2)
#^^^^ source.vba
#    ^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#           ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#              ^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                   ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                    ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                     ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                      ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                       ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                        ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>    Dim inpValB() As Variant
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#               ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.variable.vba
#                     ^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
>    inpValB = Array(1, 2, 3, 4)
#^^^^ source.vba
#    ^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#           ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#              ^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                   ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                    ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                     ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                      ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                       ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                        ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                         ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                          ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                           ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                            ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                             ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                              ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>    Dim d As New Dictionary
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                ^ source.vba meta.declare.variable.vba
#                 ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.Dictionary.vba
>    d.Add INPKEYA, inpValA
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#         ^ source.vba meta.sub-call.vba meta.arguments.vba
#          ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                  ^ source.vba meta.sub-call.vba meta.arguments.vba
#                   ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>    d.Add INPKEYB, inpValB
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#         ^ source.vba meta.sub-call.vba meta.arguments.vba
#          ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                  ^ source.vba meta.sub-call.vba meta.arguments.vba
#                   ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>'   Act
#^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim results() As Variant
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#               ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.variable.vba
#                     ^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
>    results = d.GetData()
#^^^^ source.vba
#    ^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#           ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#              ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#               ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                ^^^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                       ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                        ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>'   Assert
#^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    If tr.AssertAreEqual(UBound(inpValB) + 2, UBound(results, 2)) Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                               ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                       ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                             ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                              ^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                                    ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                     ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                                             ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                              ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                                                               ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                                                ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                                 ^ source.vba meta.flow.inline-if.vba
#                                                                  ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                                      ^ source.vba meta.flow.inline-if.vba
#                                                                       ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                                           ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                                            ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>
>Finally:
#^^^^^^^ source.vba variable.other.constant.label.vba
#       ^ source.vba
>    Set TestDictionary_GetDataWorksWithVariableArrays = tr
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                     ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                                        ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Function
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Private Function TestDictionary_ForEach() As TestResult
#^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                ^ source.vba source.method.signature.vba
#                 ^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                                       ^ source.vba source.method.signature.vba
#                                        ^ source.vba source.method.signature.vba
#                                         ^ source.vba source.method.signature.vba
#                                          ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                            ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                             ^^^^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.object.TestResult.vba
>Attribute TestDictionary_ForEach.VB_Description = "Tests the For Each functionality on keys."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                                ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                               ^ source.vba source.method.attribute.vba
#                                                ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                                 ^ source.vba source.method.attribute.vba
#                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Tests the For Each functionality on keys.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim tr As New TestResult
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^ source.vba meta.declare.variable.vba
#           ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#             ^ source.vba meta.declare.variable.vba
#              ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.TestResult.vba
>
>'   Arrange
#^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim inpKeys() As Variant
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#               ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.variable.vba
#                     ^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
>    inpKeys = Array("a", "b", "c")
#^^^^ source.vba
#    ^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#           ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#              ^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                   ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                    ^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
#                       ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                        ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
#                            ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                             ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                              ^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
#                                 ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>    Dim inpVals() As Variant
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^^^^^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#               ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                ^ source.vba meta.declare.variable.vba meta.declare.array-bounds.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.variable.vba
#                     ^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
>    inpVals = Array(1, 2, 3)
#^^^^ source.vba
#    ^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#           ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#              ^^^^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                   ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                    ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                     ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                      ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                       ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                        ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                         ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                          ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.numeric.vba
#                           ^ source.vba meta.variable-assignment.vba meta.expression.vba meta.function.call.vba
>
>    Dim d As New Dictionary
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                ^ source.vba meta.declare.variable.vba
#                 ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.Dictionary.vba
>    Dim i As Long
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Long.vba
>    For i = 0 To UBound(inpKeys)
#^^^^ source.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba keyword.operator.assignment.vba
#           ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba constant.numeric.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba
#              ^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba keyword.control.flow.loop.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba
#                 ^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba entity.name.function.call.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba
#                        ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                               ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.function.call.vba
>        d.Add inpKeys(i), inpVals(i)
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba punctuation.accessor.vba
#          ^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba entity.name.function.call.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba
#              ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                     ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                      ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                       ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                        ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                         ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba
#                          ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                 ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                  ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                   ^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
>    Next i
#^^^^ source.vba meta.flow.for-loop.vba meta.for-iterator-loop.vba meta.forLoopIterAssignment.vba meta.forLoopIterAssignRangeFrom.vba meta.forLoopIterAssignTo.vba meta.forLoopIterAssignRangeTo.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba
#         ^ source.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>'   Act and Assert
#^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    i = 0
#^^^^ source.vba
#    ^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#        ^ source.vba meta.variable-assignment.vba meta.expression.vba constant.numeric.vba
>    Dim k As Variant
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.primitive.Variant.vba
>    For Each k In d.Keys
#^^^^ source.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^^^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba keyword.control.flow.loop.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.variable-or-property.vba variable.other.readwrite.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba
#               ^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba keyword.control.flow.loop.vba
#                  ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                   ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.variable-or-property.vba punctuation.accessor.vba
#                    ^^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.variable-or-property.vba support.variable.property.vba
>        If Not tr.AssertAreEqual(inpKeys(i), k) Then GoTo Finally
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba
#        ^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba
#           ^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba keyword.operator.logical.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba
#               ^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                  ^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                 ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                         ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                          ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                           ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                            ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                             ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                              ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                               ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba
#                                                ^^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                    ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba
#                                                     ^^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                         ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                          ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>        If Not tr.AssertAreEqual(inpVals(i), d(k)) Then GoTo Finally
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba
#        ^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#          ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba
#           ^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba keyword.operator.logical.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba
#               ^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                 ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                  ^^^^^^^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                 ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                        ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                         ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                          ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                           ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                            ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                             ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                              ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                               ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                                ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                                 ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                  ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba
#                                                   ^^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                       ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba
#                                                        ^^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                            ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                             ^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>        i = i + 1
#^^^^^^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba
#        ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#            ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
#             ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.variable-assignment.vba meta.expression.vba
#              ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.variable-assignment.vba meta.expression.vba keyword.operator.arithmetic.vba
#               ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.variable-assignment.vba meta.expression.vba
#                ^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba meta.variable-assignment.vba meta.expression.vba constant.numeric.vba
>    Next k
#^^^^ source.vba meta.flow.for-loop.vba meta.for-each-loop.vba meta.forLoopEachVar.vba meta.forLoopEachIn.vba meta.forLoopEachSet.vba
#    ^^^^ source.vba meta.flow.for-loop.vba keyword.control.flow.loop.vba
#        ^ source.vba meta.flow.for-loop.vba
#         ^ source.vba meta.flow.for-loop.vba meta.variable-or-property.vba variable.other.readwrite.vba
>
>Finally:
#^^^^^^^ source.vba variable.other.constant.label.vba
#       ^ source.vba
>    Set TestDictionary_ForEach = tr
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                              ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                 ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Function
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>
>Private Function TestDictionary_GetValueGetsValue() As TestResult
#^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba storage.type.method.vba
#                ^ source.vba source.method.signature.vba
#                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.signature.vba entity.name.function.vba
#                                                 ^ source.vba source.method.signature.vba
#                                                  ^ source.vba source.method.signature.vba
#                                                   ^ source.vba source.method.signature.vba
#                                                    ^^ source.vba source.method.signature.vba meta.variables.type.vba keyword.control.as.vba
#                                                      ^ source.vba source.method.signature.vba meta.variables.type.vba
#                                                       ^^^^^^^^^^ source.vba source.method.signature.vba meta.variables.type.vba support.type.object.TestResult.vba
>Attribute TestDictionary_GetValueGetsValue.VB_Description = "Get value where key exists."
#^^^^^^^^^ source.vba source.method.attribute.vba keyword.attribute.vba
#         ^ source.vba source.method.attribute.vba
#          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba entity.name.function.vba
#                                          ^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba support.variable.property.vba
#                                                         ^ source.vba source.method.attribute.vba
#                                                          ^ source.vba source.method.attribute.vba keyword.operator.assignment.vba
#                                                           ^ source.vba source.method.attribute.vba
#                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba source.method.attribute.vba string.quoted.double.vba
>'   Get value where key exists.
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim tr As New TestResult
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#          ^ source.vba meta.declare.variable.vba
#           ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#             ^ source.vba meta.declare.variable.vba
#              ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                 ^ source.vba meta.declare.variable.vba
#                  ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.TestResult.vba
>
>'   Arrange
#^^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    Const EXPRESA As String = "A Result"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^^^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const EXPRESB As String = "B Result"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^^^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const INPKEYA As String = "A"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>    Const INPKEYB As String = "B"
#^^^^ source.vba
#    ^^^^^ source.vba meta.declare.constant.vba storage.type.vba
#         ^ source.vba meta.declare.constant.vba
#          ^^^^^^^ source.vba meta.declare.constant.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.declare.constant.vba
#                  ^^ source.vba meta.declare.constant.vba keyword.control.as.vba
#                    ^ source.vba meta.declare.constant.vba
#                     ^^^^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba support.type.primitive.String.vba
#                           ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                              ^^^ source.vba meta.declare.constant.vba meta.argument-signature.type.vba meta.variable-assignment.vba meta.expression.vba string.quoted.double.vba
>
>'   Act
#^^^^^^^ source.vba comment.line.apostrophe.vba
>    Dim d As New Dictionary
#^^^^ source.vba
#    ^^^ source.vba meta.declare.variable.vba storage.type.vba
#       ^ source.vba meta.declare.variable.vba
#        ^ source.vba meta.declare.variable.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.declare.variable.vba
#          ^^ source.vba meta.declare.variable.vba keyword.control.as.vba
#            ^ source.vba meta.declare.variable.vba
#             ^^^ source.vba meta.declare.variable.vba keyword.operator.new.vba
#                ^ source.vba meta.declare.variable.vba
#                 ^^^^^^^^^^ source.vba meta.declare.variable.vba meta.argument-signature.type.vba support.type.object.Dictionary.vba
>    d.Add INPKEYA, EXPRESA
#^^^^ source.vba
#    ^ source.vba meta.sub-call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#     ^ source.vba meta.sub-call.vba punctuation.accessor.vba
#      ^^^ source.vba meta.sub-call.vba entity.name.function.call.vba
#         ^ source.vba meta.sub-call.vba meta.arguments.vba
#          ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                 ^ source.vba meta.sub-call.vba meta.arguments.vba punctuation.separator.vba
#                  ^ source.vba meta.sub-call.vba meta.arguments.vba
#                   ^^^^^^^ source.vba meta.sub-call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
>
>'   Assert
#^^^^^^^^^^ source.vba comment.line.apostrophe.vba
>    If tr.AssertAreEqual(EXPRESA, d.GetValue(INPKEYA, EXPRESB), INPKEYA) Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                         ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                 ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                  ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                   ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                                    ^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                             ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                                    ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                                     ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                      ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                                             ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                                              ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                                               ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                                ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                                                       ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                                        ^ source.vba meta.flow.inline-if.vba
#                                                                         ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                                             ^ source.vba meta.flow.inline-if.vba
#                                                                              ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                                                  ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                                                   ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    If tr.AssertAreNotEqual(EXPRESB, d.GetValue(INPKEYB, EXPRESA), INPKEYB) Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                            ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                   ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                    ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                     ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                      ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                                       ^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                               ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                                       ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                         ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                                                ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                                                 ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                                                  ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                                   ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                                                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                                           ^ source.vba meta.flow.inline-if.vba
#                                                                            ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                                                ^ source.vba meta.flow.inline-if.vba
#                                                                                 ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                                                     ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                                                      ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>    If tr.AssertIs(Nothing, d.GetValue(INPKEYB), INPKEYB & " - no default") Then GoTo Finally
#^^^^ source.vba meta.flow.inline-if.vba
#    ^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#      ^ source.vba meta.flow.inline-if.vba
#       ^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#          ^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                  ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                   ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba constant.language.null.vba
#                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                           ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                            ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                             ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba punctuation.accessor.vba
#                              ^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba entity.name.function.call.vba
#                                      ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                       ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                              ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.function.call.vba
#                                               ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba punctuation.separator.vba
#                                                ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba
#                                                 ^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba meta.variable-or-property.vba variable.other.constant
#                                                        ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                                         ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba keyword.operator.arithmetic.vba
#                                                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba
#                                                           ^^^^^^^^^^^^^^^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba meta.arguments.vba meta.expression.vba string.quoted.double.vba
#                                                                          ^ source.vba meta.flow.inline-if.vba meta.expression.vba meta.function.call.vba
#                                                                           ^ source.vba meta.flow.inline-if.vba
#                                                                            ^^^^ source.vba meta.flow.inline-if.vba keyword.control.flow.decision.vba
#                                                                                ^ source.vba meta.flow.inline-if.vba
#                                                                                 ^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba keyword.control.jump.vba
#                                                                                     ^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba
#                                                                                      ^^^^^^^ source.vba meta.flow.inline-if.vba meta.goToGoSubReturnStatement.vba variable.other.constant.label.vba
>
>Finally:
#^^^^^^^ source.vba variable.other.constant.label.vba
#       ^ source.vba
>    Set TestDictionary_GetValueGetsValue = tr
#^^^^ source.vba
#    ^^^ source.vba meta.variable-assignment.vba keyword.control.vba
#       ^ source.vba meta.variable-assignment.vba
#        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ source.vba meta.variable-assignment.vba meta.variable-or-property.vba variable.other.readwrite.vba
#                                        ^^^ source.vba meta.variable-assignment.vba keyword.operator.assignment.vba
#                                           ^^ source.vba meta.variable-assignment.vba meta.expression.vba meta.variable-or-property.vba variable.other.readwrite.vba
>End Function
#^^^^^^^^^^^^ source.vba storage.type.method.close.vba
>